i_btype_branches__opc_beq__x_0__x_0__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_0,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %9 = i1 -1;
        jump(i32 %4, i1 %9);

i_btype_branches__opc_beq__x_0__xpr_general__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 seteq(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_beq__xpr_general__x_0__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 seteq(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_beq__xpr_general__xpr_general__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 regop(reg_1);
        %9 = i1 seteq(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_bge__x_0__x_0__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_0,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %9 = i1 -1;
        jump(i32 %4, i1 %9);

i_btype_branches__opc_bge__x_0__xpr_general__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 1;
        %9 = i1 setlt(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_bge__xpr_general__x_0__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 -1;
        %9 = i1 setgt(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_bge__xpr_general__xpr_general__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 regop(reg_1);
        %9 = i1 setge(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_bgeu__x_0__x_0__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_0,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %9 = i1 -1;
        jump(i32 %4, i1 %9);

i_btype_branches__opc_bgeu__x_0__xpr_general__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 seteq(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_bgeu__xpr_general__x_0__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %9 = i1 -1;
        jump(i32 %4, i1 %9);

i_btype_branches__opc_bgeu__xpr_general__xpr_general__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 regop(reg_1);
        %9 = i1 setuge(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_blt__x_0__x_0__relative_addr12__

i_btype_branches__opc_blt__x_0__xpr_general__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 setgt(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_blt__xpr_general__x_0__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 setlt(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_blt__xpr_general__xpr_general__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 regop(reg_1);
        %9 = i1 setlt(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_bltu__x_0__x_0__relative_addr12__

i_btype_branches__opc_bltu__x_0__xpr_general__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 setne(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_bltu__xpr_general__x_0__relative_addr12__

i_btype_branches__opc_bltu__xpr_general__xpr_general__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 regop(reg_1);
        %9 = i1 setult(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_bne__x_0__x_0__relative_addr12__

i_btype_branches__opc_bne__x_0__xpr_general__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 setne(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_bne__xpr_general__x_0__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 setne(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_bne__xpr_general__xpr_general__relative_addr12__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 regop(reg_1);
        %9 = i1 setne(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_call_alias__relative_addr20__
        %5 = i32 get_pc();
        reg(codasip_register_class_index_0, 1) = i32 %5;
        %8 = i32 immop(imm_0,1,21,1,0);
        %7 = i32 add(i32 %5, i32 %8);
        %9 = i32 -4;
        %6 = i32 add(i32 %7, i32 %9);
        %10 = i1 -1;
        jump(i32 %6, i1 %10);

i_call_reg_alias__simm12__x_0__
        %5 = i32 get_pc();
        reg(codasip_register_class_index_0, 1) = i32 %5;
        %6 = i32 immop(imm_0,1,12,2,0);
        %7 = i1 -1;
        jump(i32 %6, i1 %7);

i_call_reg_alias__simm12__xpr_general__
        %5 = i32 get_pc();
        reg(codasip_register_class_index_0, 1) = i32 %5;
        %8 = i32 regop(reg_1);
        %9 = i32 immop(imm_0,1,12,0,0);
        %7 = i32 add(i32 %8, i32 %9);
        %10 = i32 -4;
        %6 = i32 and(i32 %7, i32 %10);
        %11 = i1 -1;
        jump(i32 %6, i1 %11);

i_halt__opc_halt__
        halt();

i_itype_alu__opc_addi__x_0__x_0__simm12__

i_itype_alu__opc_addi__x_0__xpr_general__simm12__

i_itype_alu__opc_addi__xpr_general__x_0__simm12__
        %4 = i32 immop(imm_1,1,12,0,0);
        regop(reg_0) = i32 %4;

i_itype_alu__opc_addi__xpr_general__xpr_general__simm12__
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_2,1,12,0,0);
        %4 = i32 add(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_itype_alu__opc_andi__x_0__x_0__simm12__

i_itype_alu__opc_andi__x_0__xpr_general__simm12__

i_itype_alu__opc_andi__xpr_general__x_0__simm12__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_itype_alu__opc_andi__xpr_general__xpr_general__simm12__
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_2,1,12,0,0);
        %4 = i32 and(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_itype_alu__opc_ori__x_0__x_0__simm12__

i_itype_alu__opc_ori__x_0__xpr_general__simm12__

i_itype_alu__opc_ori__xpr_general__x_0__simm12__
        %4 = i32 immop(imm_1,1,12,0,0);
        regop(reg_0) = i32 %4;

i_itype_alu__opc_ori__xpr_general__xpr_general__simm12__
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_2,1,12,0,0);
        %4 = i32 or(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_itype_alu__opc_slti__x_0__x_0__simm12__

i_itype_alu__opc_slti__x_0__xpr_general__simm12__

i_itype_alu__opc_slti__xpr_general__x_0__simm12__
        %6 = i32 immop(imm_1,1,12,0,0);
        %7 = i32 0;
        %5 = i1 setgt(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;

i_itype_alu__opc_slti__xpr_general__xpr_general__simm12__
        %6 = i32 regop(reg_1);
        %7 = i32 immop(imm_2,1,12,0,0);
        %5 = i1 setlt(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;

i_itype_alu__opc_sltiu__x_0__x_0__simm12__

i_itype_alu__opc_sltiu__x_0__xpr_general__simm12__

i_itype_alu__opc_sltiu__xpr_general__x_0__simm12__
        %6 = i32 immop(imm_1,1,12,0,0);
        %7 = i32 0;
        %5 = i1 setne(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;

i_itype_alu__opc_sltiu__xpr_general__xpr_general__simm12__
        %6 = i32 regop(reg_1);
        %7 = i32 immop(imm_2,1,12,0,0);
        %5 = i1 setult(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;

i_itype_alu__opc_xori__x_0__x_0__simm12__

i_itype_alu__opc_xori__x_0__xpr_general__simm12__

i_itype_alu__opc_xori__xpr_general__x_0__simm12__
        %4 = i32 immop(imm_1,1,12,0,0);
        regop(reg_0) = i32 %4;

i_itype_alu__opc_xori__xpr_general__xpr_general__simm12__
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_2,1,12,0,0);
        %4 = i32 xor(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_itype_jlreg__opc_jalr__x_0__simm12__x_0__
        %4 = i32 immop(imm_0,1,12,1,0);
        %5 = i1 -1;
        jump(i32 %4, i1 %5);

i_itype_jlreg__opc_jalr__x_0__simm12__xpr_general__
        %6 = i32 regop(reg_1);
        %7 = i32 immop(imm_0,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -2;
        %4 = i32 and(i32 %5, i32 %8);
        %9 = i1 -1;
        jump(i32 %4, i1 %9);

i_itype_jlreg__opc_jalr__xpr_general__simm12__x_0__
        %5 = i32 get_pc();
        regop(reg_0) = i32 %5;
        %6 = i32 immop(imm_1,1,12,1,0);
        %7 = i1 -1;
        jump(i32 %6, i1 %7);

i_itype_jlreg__opc_jalr__xpr_general__simm12__xpr_general__
        %5 = i32 get_pc();
        regop(reg_0) = i32 %5;
        %8 = i32 regop(reg_2);
        %9 = i32 immop(imm_1,1,12,0,0);
        %7 = i32 add(i32 %8, i32 %9);
        %10 = i32 -2;
        %6 = i32 and(i32 %7, i32 %10);
        %11 = i1 -1;
        jump(i32 %6, i1 %11);

i_itype_loads__opc_lb__x_0__simm12__x_0__
        %4 = i32 immop(imm_0,1,12,0,0);
        %2 = i8 load(i32 %4, 0);

i_itype_loads__opc_lb__x_0__simm12__xpr_general__
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_0,1,12,0,0);
        %4 = i32 add(i32 %5, i32 %6);
        %2 = i8 load(i32 %4, 0);

i_itype_loads__opc_lb__xpr_general__simm12__x_0__
        %5 = i32 immop(imm_1,1,12,0,0);
        %3 = i8 load(i32 %5, 0);
        %6 = i32 sign_extend(i8 %3);
        regop(reg_0) = i32 %6;

i_itype_loads__opc_lb__xpr_general__simm12__xpr_general__
        %6 = i32 regop(reg_2);
        %7 = i32 immop(imm_1,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        %3 = i8 load(i32 %5, 0);
        %8 = i32 sign_extend(i8 %3);
        regop(reg_0) = i32 %8;

i_itype_loads__opc_lbu__x_0__simm12__x_0__
        %4 = i32 immop(imm_0,1,12,0,0);
        %2 = i8 load(i32 %4, 0);

i_itype_loads__opc_lbu__x_0__simm12__xpr_general__
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_0,1,12,0,0);
        %4 = i32 add(i32 %5, i32 %6);
        %2 = i8 load(i32 %4, 0);

i_itype_loads__opc_lbu__xpr_general__simm12__x_0__
        %5 = i32 immop(imm_1,1,12,0,0);
        %3 = i8 load(i32 %5, 0);
        %6 = i32 zero_extend(i8 %3);
        regop(reg_0) = i32 %6;

i_itype_loads__opc_lbu__xpr_general__simm12__xpr_general__
        %6 = i32 regop(reg_2);
        %7 = i32 immop(imm_1,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        %3 = i8 load(i32 %5, 0);
        %8 = i32 zero_extend(i8 %3);
        regop(reg_0) = i32 %8;

i_itype_loads__opc_lh__x_0__simm12__x_0__
        %4 = i32 immop(imm_0,1,12,0,0);
        %2 = i16 load(i32 %4, 0);

i_itype_loads__opc_lh__x_0__simm12__xpr_general__
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_0,1,12,0,0);
        %4 = i32 add(i32 %5, i32 %6);
        %2 = i16 load(i32 %4, 0);

i_itype_loads__opc_lh__xpr_general__simm12__x_0__
        %5 = i32 immop(imm_1,1,12,0,0);
        %3 = i16 load(i32 %5, 0);
        %6 = i32 sign_extend(i16 %3);
        regop(reg_0) = i32 %6;

i_itype_loads__opc_lh__xpr_general__simm12__xpr_general__
        %6 = i32 regop(reg_2);
        %7 = i32 immop(imm_1,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        %3 = i16 load(i32 %5, 0);
        %8 = i32 sign_extend(i16 %3);
        regop(reg_0) = i32 %8;

i_itype_loads__opc_lhu__x_0__simm12__x_0__
        %4 = i32 immop(imm_0,1,12,0,0);
        %2 = i16 load(i32 %4, 0);

i_itype_loads__opc_lhu__x_0__simm12__xpr_general__
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_0,1,12,0,0);
        %4 = i32 add(i32 %5, i32 %6);
        %2 = i16 load(i32 %4, 0);

i_itype_loads__opc_lhu__xpr_general__simm12__x_0__
        %5 = i32 immop(imm_1,1,12,0,0);
        %3 = i16 load(i32 %5, 0);
        %6 = i32 zero_extend(i16 %3);
        regop(reg_0) = i32 %6;

i_itype_loads__opc_lhu__xpr_general__simm12__xpr_general__
        %6 = i32 regop(reg_2);
        %7 = i32 immop(imm_1,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        %3 = i16 load(i32 %5, 0);
        %8 = i32 zero_extend(i16 %3);
        regop(reg_0) = i32 %8;

i_itype_loads__opc_lw__x_0__simm12__x_0__
        %4 = i32 immop(imm_0,1,12,0,0);
        %2 = i32 load(i32 %4, 0);

i_itype_loads__opc_lw__x_0__simm12__xpr_general__
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_0,1,12,0,0);
        %4 = i32 add(i32 %5, i32 %6);
        %2 = i32 load(i32 %4, 0);

i_itype_loads__opc_lw__xpr_general__simm12__x_0__
        %5 = i32 immop(imm_1,1,12,0,0);
        %3 = i32 load(i32 %5, 0);
        regop(reg_0) = i32 %3;

i_itype_loads__opc_lw__xpr_general__simm12__xpr_general__
        %6 = i32 regop(reg_2);
        %7 = i32 immop(imm_1,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        %3 = i32 load(i32 %5, 0);
        regop(reg_0) = i32 %3;

i_jal_abs_calias__opc_jal__x_0__relative_addr20__
        %4 = i32 immop(imm_0,1,21,1,0);
        %5 = i1 -1;
        jump(i32 %4, i1 %5);

i_jal_abs_calias__opc_jal__xpr_general__relative_addr20__
        %5 = i32 get_pc();
        regop(reg_0) = i32 %5;
        %6 = i32 immop(imm_1,1,21,1,0);
        %7 = i1 -1;
        jump(i32 %6, i1 %7);

i_jtype_jlink__opc_jal__x_0__relative_addr20__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_0,1,21,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %9 = i1 -1;
        jump(i32 %4, i1 %9);

i_jtype_jlink__opc_jal__xpr_general__relative_addr20__
        %5 = i32 get_pc();
        regop(reg_0) = i32 %5;
        %8 = i32 immop(imm_1,1,21,1,0);
        %7 = i32 add(i32 %5, i32 %8);
        %9 = i32 -4;
        %6 = i32 add(i32 %7, i32 %9);
        %10 = i1 -1;
        jump(i32 %6, i1 %10);

i_nop_alias__
        nop();

i_ret_alias__
        %5 = i32 1;
        %4 = i32 reg(codasip_register_class_index_0, 1);
        %6 = i1 -1;
        jump(i32 %4, i1 %6);

i_rtype_alu__opc_add__x_0__x_0__x_0__

i_rtype_alu__opc_add__x_0__x_0__xpr_general__

i_rtype_alu__opc_add__x_0__xpr_general__x_0__

i_rtype_alu__opc_add__x_0__xpr_general__xpr_general__

i_rtype_alu__opc_add__xpr_general__x_0__x_0__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_add__xpr_general__x_0__xpr_general__
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_add__xpr_general__xpr_general__x_0__
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_add__xpr_general__xpr_general__xpr_general__
        %5 = i32 regop(reg_2);
        %6 = i32 regop(reg_1);
        %4 = i32 add(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_and__x_0__x_0__x_0__

i_rtype_alu__opc_and__x_0__x_0__xpr_general__

i_rtype_alu__opc_and__x_0__xpr_general__x_0__

i_rtype_alu__opc_and__x_0__xpr_general__xpr_general__

i_rtype_alu__opc_and__xpr_general__x_0__x_0__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_and__xpr_general__x_0__xpr_general__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_and__xpr_general__xpr_general__x_0__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_and__xpr_general__xpr_general__xpr_general__
        %5 = i32 regop(reg_2);
        %6 = i32 regop(reg_1);
        %4 = i32 and(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_or__x_0__x_0__x_0__

i_rtype_alu__opc_or__x_0__x_0__xpr_general__

i_rtype_alu__opc_or__x_0__xpr_general__x_0__

i_rtype_alu__opc_or__x_0__xpr_general__xpr_general__

i_rtype_alu__opc_or__xpr_general__x_0__x_0__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_or__xpr_general__x_0__xpr_general__
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_or__xpr_general__xpr_general__x_0__
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_or__xpr_general__xpr_general__xpr_general__
        %5 = i32 regop(reg_2);
        %6 = i32 regop(reg_1);
        %4 = i32 or(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sll__x_0__x_0__x_0__

i_rtype_alu__opc_sll__x_0__x_0__xpr_general__

i_rtype_alu__opc_sll__x_0__xpr_general__x_0__

i_rtype_alu__opc_sll__x_0__xpr_general__xpr_general__

i_rtype_alu__opc_sll__xpr_general__x_0__x_0__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sll__xpr_general__x_0__xpr_general__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sll__xpr_general__xpr_general__x_0__
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sll__xpr_general__xpr_general__xpr_general__
        %5 = i32 regop(reg_1);
        %6 = i32 regop(reg_2);
        %4 = i32 shl(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_slt__x_0__x_0__x_0__

i_rtype_alu__opc_slt__x_0__x_0__xpr_general__

i_rtype_alu__opc_slt__x_0__xpr_general__x_0__

i_rtype_alu__opc_slt__x_0__xpr_general__xpr_general__

i_rtype_alu__opc_slt__xpr_general__x_0__x_0__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_slt__xpr_general__x_0__xpr_general__
        %6 = i32 regop(reg_1);
        %7 = i32 0;
        %5 = i1 setgt(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_slt__xpr_general__xpr_general__x_0__
        %5 = i32 regop(reg_1);
        %6 = i32 31;
        %4 = i32 srl(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_slt__xpr_general__xpr_general__xpr_general__
        %6 = i32 regop(reg_1);
        %7 = i32 regop(reg_2);
        %5 = i1 setlt(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sltu__x_0__x_0__x_0__

i_rtype_alu__opc_sltu__x_0__x_0__xpr_general__

i_rtype_alu__opc_sltu__x_0__xpr_general__x_0__

i_rtype_alu__opc_sltu__x_0__xpr_general__xpr_general__

i_rtype_alu__opc_sltu__xpr_general__x_0__x_0__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sltu__xpr_general__x_0__xpr_general__
        %6 = i32 regop(reg_1);
        %7 = i32 0;
        %5 = i1 setne(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sltu__xpr_general__xpr_general__x_0__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sltu__xpr_general__xpr_general__xpr_general__
        %6 = i32 regop(reg_1);
        %7 = i32 regop(reg_2);
        %5 = i1 setult(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sra__x_0__x_0__x_0__

i_rtype_alu__opc_sra__x_0__x_0__xpr_general__

i_rtype_alu__opc_sra__x_0__xpr_general__x_0__

i_rtype_alu__opc_sra__x_0__xpr_general__xpr_general__

i_rtype_alu__opc_sra__xpr_general__x_0__x_0__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sra__xpr_general__x_0__xpr_general__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sra__xpr_general__xpr_general__x_0__
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sra__xpr_general__xpr_general__xpr_general__
        %5 = i32 regop(reg_1);
        %7 = i32 regop(reg_2);
        %8 = i32 31;
        %6 = i32 and(i32 %7, i32 %8);
        %4 = i32 sra(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_srl__x_0__x_0__x_0__

i_rtype_alu__opc_srl__x_0__x_0__xpr_general__

i_rtype_alu__opc_srl__x_0__xpr_general__x_0__

i_rtype_alu__opc_srl__x_0__xpr_general__xpr_general__

i_rtype_alu__opc_srl__xpr_general__x_0__x_0__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_srl__xpr_general__x_0__xpr_general__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_srl__xpr_general__xpr_general__x_0__
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_srl__xpr_general__xpr_general__xpr_general__
        %5 = i32 regop(reg_1);
        %7 = i32 regop(reg_2);
        %8 = i32 31;
        %6 = i32 and(i32 %7, i32 %8);
        %4 = i32 srl(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sub__x_0__x_0__x_0__

i_rtype_alu__opc_sub__x_0__x_0__xpr_general__

i_rtype_alu__opc_sub__x_0__xpr_general__x_0__

i_rtype_alu__opc_sub__x_0__xpr_general__xpr_general__

i_rtype_alu__opc_sub__xpr_general__x_0__x_0__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sub__xpr_general__x_0__xpr_general__
        %5 = i32 0;
        %6 = i32 regop(reg_1);
        %4 = i32 sub(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sub__xpr_general__xpr_general__x_0__
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sub__xpr_general__xpr_general__xpr_general__
        %5 = i32 regop(reg_1);
        %6 = i32 regop(reg_2);
        %4 = i32 sub(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_xor__x_0__x_0__x_0__

i_rtype_alu__opc_xor__x_0__x_0__xpr_general__

i_rtype_alu__opc_xor__x_0__xpr_general__x_0__

i_rtype_alu__opc_xor__x_0__xpr_general__xpr_general__

i_rtype_alu__opc_xor__xpr_general__x_0__x_0__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_xor__xpr_general__x_0__xpr_general__
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_xor__xpr_general__xpr_general__x_0__
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_xor__xpr_general__xpr_general__xpr_general__
        %5 = i32 regop(reg_2);
        %6 = i32 regop(reg_1);
        %4 = i32 xor(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_rtype_shift__opc_slli__x_0__x_0__uimm5__

i_rtype_shift__opc_slli__x_0__xpr_general__uimm5__

i_rtype_shift__opc_slli__xpr_general__x_0__uimm5__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_shift__opc_slli__xpr_general__xpr_general__uimm5__
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_2,0,5,0,0);
        %4 = i32 shl(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_rtype_shift__opc_srai__x_0__x_0__uimm5__

i_rtype_shift__opc_srai__x_0__xpr_general__uimm5__

i_rtype_shift__opc_srai__xpr_general__x_0__uimm5__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_shift__opc_srai__xpr_general__xpr_general__uimm5__
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_2,0,5,0,0);
        %4 = i32 sra(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_rtype_shift__opc_srli__x_0__x_0__uimm5__

i_rtype_shift__opc_srli__x_0__xpr_general__uimm5__

i_rtype_shift__opc_srli__xpr_general__x_0__uimm5__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_shift__opc_srli__xpr_general__xpr_general__uimm5__
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_2,0,5,0,0);
        %4 = i32 srl(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;

i_stype_store__opc_sb__x_0__simm12__x_0__
        %4 = i8 0;
        %5 = i32 immop(imm_0,1,12,0,0);
        store(i8 %4, i32 %5, 0);

i_stype_store__opc_sb__x_0__simm12__xpr_general__
        %4 = i8 0;
        %6 = i32 regop(reg_1);
        %7 = i32 immop(imm_0,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        store(i8 %4, i32 %5, 0);

i_stype_store__opc_sb__xpr_general__simm12__x_0__
        %5 = i32 regop(reg_0);
        %4 = i8 truncate(i32 %5);
        %6 = i32 immop(imm_1,1,12,0,0);
        store(i8 %4, i32 %6, 0);

i_stype_store__opc_sb__xpr_general__simm12__xpr_general__
        %5 = i32 regop(reg_0);
        %4 = i8 truncate(i32 %5);
        %7 = i32 regop(reg_2);
        %8 = i32 immop(imm_1,1,12,0,0);
        %6 = i32 add(i32 %7, i32 %8);
        store(i8 %4, i32 %6, 0);

i_stype_store__opc_sh__x_0__simm12__x_0__
        %4 = i16 0;
        %5 = i32 immop(imm_0,1,12,0,0);
        store(i16 %4, i32 %5, 0);

i_stype_store__opc_sh__x_0__simm12__xpr_general__
        %4 = i16 0;
        %6 = i32 regop(reg_1);
        %7 = i32 immop(imm_0,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        store(i16 %4, i32 %5, 0);

i_stype_store__opc_sh__xpr_general__simm12__x_0__
        %5 = i32 regop(reg_0);
        %4 = i16 truncate(i32 %5);
        %6 = i32 immop(imm_1,1,12,0,0);
        store(i16 %4, i32 %6, 0);

i_stype_store__opc_sh__xpr_general__simm12__xpr_general__
        %5 = i32 regop(reg_0);
        %4 = i16 truncate(i32 %5);
        %7 = i32 regop(reg_2);
        %8 = i32 immop(imm_1,1,12,0,0);
        %6 = i32 add(i32 %7, i32 %8);
        store(i16 %4, i32 %6, 0);

i_stype_store__opc_sw__x_0__simm12__x_0__
        %4 = i32 0;
        %5 = i32 immop(imm_0,1,12,0,0);
        store(i32 %4, i32 %5, 0);

i_stype_store__opc_sw__x_0__simm12__xpr_general__
        %4 = i32 0;
        %6 = i32 regop(reg_1);
        %7 = i32 immop(imm_0,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        store(i32 %4, i32 %5, 0);

i_stype_store__opc_sw__xpr_general__simm12__x_0__
        %4 = i32 regop(reg_0);
        %5 = i32 immop(imm_1,1,12,0,0);
        store(i32 %4, i32 %5, 0);

i_stype_store__opc_sw__xpr_general__simm12__xpr_general__
        %4 = i32 regop(reg_0);
        %6 = i32 regop(reg_2);
        %7 = i32 immop(imm_1,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        store(i32 %4, i32 %5, 0);

i_utype_ops__opc_auipc__x_0__uimm20__

i_utype_ops__opc_auipc__xpr_general__uimm20__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,0,32,12,12);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        regop(reg_0) = i32 %4;

i_utype_ops__opc_lui__x_0__uimm20__

i_utype_ops__opc_lui__xpr_general__uimm20__
        %4 = i32 immop(imm_1,0,32,12,12);
        regop(reg_0) = i32 %4;

e_movi32__
        %4 = i32 immop(imm_0,0,32,0,0);
        regop(reg_1) = i32 %4;

i_btype_branches__opc_bge__xpr_general__xpr_general__relative_addr12__swappedCmpClone0__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_1);
        %11 = i32 regop(reg_0);
        %9 = i1 setle(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_bgeu__xpr_general__xpr_general__relative_addr12__swappedCmpClone0__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_1);
        %11 = i32 regop(reg_0);
        %9 = i1 setule(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_blt__xpr_general__xpr_general__relative_addr12__swappedCmpClone0__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_1);
        %11 = i32 regop(reg_0);
        %9 = i1 setgt(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_btype_branches__opc_bltu__xpr_general__xpr_general__relative_addr12__swappedCmpClone0__
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_1);
        %11 = i32 regop(reg_0);
        %9 = i1 setugt(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);

i_itype_alu__opc_slti__xpr_general__x_0__simm12__immSpecClone__imm_1__1__
        %4 = i32 1;
        regop(reg_0) = i32 %4;

i_itype_alu__opc_slti__xpr_general__x_0__simm12__immSpecClone__imm_1__0__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_itype_alu__opc_sltiu__xpr_general__x_0__simm12__immSpecClone__imm_1__1__
        %4 = i32 1;
        regop(reg_0) = i32 %4;

i_itype_alu__opc_sltiu__xpr_general__x_0__simm12__immSpecClone__imm_1__0__
        %4 = i32 0;
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_slt__xpr_general__xpr_general__xpr_general__swappedCmpClone0__
        %6 = i32 regop(reg_2);
        %7 = i32 regop(reg_1);
        %5 = i1 setgt(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;

i_rtype_alu__opc_sltu__xpr_general__xpr_general__xpr_general__swappedCmpClone0__
        %6 = i32 regop(reg_2);
        %7 = i32 regop(reg_1);
        %5 = i1 setugt(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;

