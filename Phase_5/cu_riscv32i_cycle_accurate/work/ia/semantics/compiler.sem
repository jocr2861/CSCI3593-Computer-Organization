# 1 "/home/project/cu_riscv32i_cycle_accurate/work/ia/semantics/src/compiler.sem"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 337 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/home/project/cu_riscv32i_cycle_accurate/work/cu_riscv32i_cycle_accurate_options.hcodal" 1
# 2 "<built-in>" 2
# 1 "/home/project/cu_riscv32i_cycle_accurate/work/ia/semantics/src/compiler.sem" 2
version "9.1.1-1255"
design_path "cu_riscv32i_cycle_accurate.ia"

register_class bits[32] rf_xpr[32];

register_class bits[32] xpr_general
{
    physical = rf_xpr;
    registers = {
        (1, ("x1", "ra"), 0b00001:bit[5]),
        (2, ("x2", "sp"), 0b00010:bit[5]),
        (3, ("x3", "gp"), 0b00011:bit[5]),
        (4, ("x4", "tp"), 0b00100:bit[5]),
        (5, ("x5", "t0"), 0b00101:bit[5]),
        (6, ("x6", "t1"), 0b00110:bit[5]),
        (7, ("x7", "t2"), 0b00111:bit[5]),
        (8, ("x8", "fp", "s0"), 0b01000:bit[5]),
        (9, ("x9", "s1"), 0b01001:bit[5]),
        (10, ("x10", "a0"), 0b01010:bit[5]),
        (11, ("x11", "a1"), 0b01011:bit[5]),
        (12, ("x12", "a2"), 0b01100:bit[5]),
        (13, ("x13", "a3"), 0b01101:bit[5]),
        (14, ("x14", "a4"), 0b01110:bit[5]),
        (15, ("x15", "a5"), 0b01111:bit[5]),
        (16, ("x16", "a6"), 0b10000:bit[5]),
        (17, ("x17", "a7"), 0b10001:bit[5]),
        (18, ("x18", "s2"), 0b10010:bit[5]),
        (19, ("x19", "s3"), 0b10011:bit[5]),
        (20, ("x20", "s4"), 0b10100:bit[5]),
        (21, ("x21", "s5"), 0b10101:bit[5]),
        (22, ("x22", "s6"), 0b10110:bit[5]),
        (23, ("x23", "s7"), 0b10111:bit[5]),
        (24, ("x24", "s8"), 0b11000:bit[5]),
        (25, ("x25", "s9"), 0b11001:bit[5]),
        (26, ("x26", "s10"), 0b11010:bit[5]),
        (27, ("x27", "s11"), 0b11011:bit[5]),
        (28, ("x28", "t3"), 0b11100:bit[5]),
        (29, ("x29", "t4"), 0b11101:bit[5]),
        (30, ("x30", "t5"), 0b11110:bit[5]),
        (31, ("x31", "t6"), 0b11111:bit[5])
    };
};

/// i_beqz_alias(rs1 = x_0, simm = relative_addr12(addr12))
instruction i_beqz_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "beqz" "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000000:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_beqz_alias(el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_beqz_alias(rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_beqz_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "beqz" "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000000:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_beqz_alias(el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_beqz_alias(rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_beqz_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "beqz" reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b000:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_beqz_alias(el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgez_alias(rs1 = x_0, simm = relative_addr12(addr12))
instruction i_bgez_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgez" "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000101:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgez_alias(el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgez_alias(rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_bgez_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgez" "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000101:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgez_alias(el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgez_alias(rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_bgez_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgez" reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b101:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgez_alias(el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgt_alias(rs2 = x_0, rs1 = x_0, simm = relative_addr12(addr12))
instruction i_bgt_alias__x_0__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgt" "x0"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000100:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgt_alias(el:x_0, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgt_alias(rs2 = x_0, rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_bgt_alias__x_0__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgt" "x0"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000100:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgt_alias(el:x_0, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgt_alias(rs2 = x_0, rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_bgt_alias__x_0__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgt" "x0"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b100:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgt_alias(el:x_0, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgt_alias(rs2 = x_0_alias, rs1 = x_0, simm = relative_addr12(addr12))
instruction i_bgt_alias__x_0_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgt" "zero"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000100:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgt_alias(el:x_0_alias, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgt_alias(rs2 = x_0_alias, rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_bgt_alias__x_0_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgt" "zero"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000100:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgt_alias(el:x_0_alias, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgt_alias(rs2 = x_0_alias, rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_bgt_alias__x_0_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgt" "zero"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b100:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgt_alias(el:x_0_alias, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgt_alias(rs2 = xpr_general, rs1 = x_0, simm = relative_addr12(addr12))
instruction i_bgt_alias__xpr_general__x_0__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgt" reg_0~"," "x0"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000100:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgt_alias(el:xpr_general, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgt_alias(rs2 = xpr_general, rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_bgt_alias__xpr_general__x_0_alias__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgt" reg_0~"," "zero"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000100:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgt_alias(el:xpr_general, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgt_alias(rs2 = xpr_general, rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_bgt_alias__xpr_general__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgt" reg_0~"," reg_1~"," imm_2 };
    binary { imm_2[11..11] imm_2[9..4] reg_0[4..0] reg_1[4..0] 0b100:bit[3] imm_2[3..0] imm_2[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgt_alias(el:xpr_general, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgtu_alias(rs2 = x_0, rs1 = x_0, simm = relative_addr12(addr12))
instruction i_bgtu_alias__x_0__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgtu" "x0"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000110:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgtu_alias(el:x_0, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgtu_alias(rs2 = x_0, rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_bgtu_alias__x_0__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgtu" "x0"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000110:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgtu_alias(el:x_0, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgtu_alias(rs2 = x_0, rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_bgtu_alias__x_0__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgtu" "x0"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b110:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgtu_alias(el:x_0, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgtu_alias(rs2 = x_0_alias, rs1 = x_0, simm = relative_addr12(addr12))
instruction i_bgtu_alias__x_0_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgtu" "zero"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000110:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgtu_alias(el:x_0_alias, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgtu_alias(rs2 = x_0_alias, rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_bgtu_alias__x_0_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgtu" "zero"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000110:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgtu_alias(el:x_0_alias, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgtu_alias(rs2 = x_0_alias, rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_bgtu_alias__x_0_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgtu" "zero"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b110:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgtu_alias(el:x_0_alias, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgtu_alias(rs2 = xpr_general, rs1 = x_0, simm = relative_addr12(addr12))
instruction i_bgtu_alias__xpr_general__x_0__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgtu" reg_0~"," "x0"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000110:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgtu_alias(el:xpr_general, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgtu_alias(rs2 = xpr_general, rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_bgtu_alias__xpr_general__x_0_alias__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgtu" reg_0~"," "zero"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000110:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgtu_alias(el:xpr_general, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgtu_alias(rs2 = xpr_general, rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_bgtu_alias__xpr_general__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgtu" reg_0~"," reg_1~"," imm_2 };
    binary { imm_2[11..11] imm_2[9..4] reg_0[4..0] reg_1[4..0] 0b110:bit[3] imm_2[3..0] imm_2[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgtu_alias(el:xpr_general, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgtz_alias(rs2 = x_0, simm = relative_addr12(addr12))
instruction i_bgtz_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgtz" "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000100:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgtz_alias(el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgtz_alias(rs2 = x_0_alias, simm = relative_addr12(addr12))
instruction i_bgtz_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgtz" "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000100:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgtz_alias(el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_bgtz_alias(rs2 = xpr_general, simm = relative_addr12(addr12))
instruction i_bgtz_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bgtz" reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000100:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bgtz_alias(el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_ble_alias(rs2 = x_0, rs1 = x_0, simm = relative_addr12(addr12))
instruction i_ble_alias__x_0__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "ble" "x0"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000101:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_ble_alias(el:x_0, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_ble_alias(rs2 = x_0, rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_ble_alias__x_0__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "ble" "x0"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000101:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_ble_alias(el:x_0, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_ble_alias(rs2 = x_0, rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_ble_alias__x_0__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "ble" "x0"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b101:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_ble_alias(el:x_0, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_ble_alias(rs2 = x_0_alias, rs1 = x_0, simm = relative_addr12(addr12))
instruction i_ble_alias__x_0_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "ble" "zero"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000101:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_ble_alias(el:x_0_alias, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_ble_alias(rs2 = x_0_alias, rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_ble_alias__x_0_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "ble" "zero"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000101:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_ble_alias(el:x_0_alias, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_ble_alias(rs2 = x_0_alias, rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_ble_alias__x_0_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "ble" "zero"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b101:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_ble_alias(el:x_0_alias, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_ble_alias(rs2 = xpr_general, rs1 = x_0, simm = relative_addr12(addr12))
instruction i_ble_alias__xpr_general__x_0__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "ble" reg_0~"," "x0"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000101:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_ble_alias(el:xpr_general, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_ble_alias(rs2 = xpr_general, rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_ble_alias__xpr_general__x_0_alias__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "ble" reg_0~"," "zero"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000101:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_ble_alias(el:xpr_general, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_ble_alias(rs2 = xpr_general, rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_ble_alias__xpr_general__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "ble" reg_0~"," reg_1~"," imm_2 };
    binary { imm_2[11..11] imm_2[9..4] reg_0[4..0] reg_1[4..0] 0b101:bit[3] imm_2[3..0] imm_2[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_ble_alias(el:xpr_general, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_bleu_alias(rs2 = x_0, rs1 = x_0, simm = relative_addr12(addr12))
instruction i_bleu_alias__x_0__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bleu" "x0"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000111:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bleu_alias(el:x_0, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_bleu_alias(rs2 = x_0, rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_bleu_alias__x_0__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bleu" "x0"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000111:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bleu_alias(el:x_0, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_bleu_alias(rs2 = x_0, rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_bleu_alias__x_0__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bleu" "x0"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b111:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bleu_alias(el:x_0, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_bleu_alias(rs2 = x_0_alias, rs1 = x_0, simm = relative_addr12(addr12))
instruction i_bleu_alias__x_0_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bleu" "zero"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000111:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bleu_alias(el:x_0_alias, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_bleu_alias(rs2 = x_0_alias, rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_bleu_alias__x_0_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bleu" "zero"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000111:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bleu_alias(el:x_0_alias, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_bleu_alias(rs2 = x_0_alias, rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_bleu_alias__x_0_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bleu" "zero"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b111:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bleu_alias(el:x_0_alias, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_bleu_alias(rs2 = xpr_general, rs1 = x_0, simm = relative_addr12(addr12))
instruction i_bleu_alias__xpr_general__x_0__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bleu" reg_0~"," "x0"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000111:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bleu_alias(el:xpr_general, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_bleu_alias(rs2 = xpr_general, rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_bleu_alias__xpr_general__x_0_alias__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bleu" reg_0~"," "zero"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000111:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bleu_alias(el:xpr_general, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_bleu_alias(rs2 = xpr_general, rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_bleu_alias__xpr_general__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bleu" reg_0~"," reg_1~"," imm_2 };
    binary { imm_2[11..11] imm_2[9..4] reg_0[4..0] reg_1[4..0] 0b111:bit[3] imm_2[3..0] imm_2[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bleu_alias(el:xpr_general, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_blez_alias(rs2 = x_0, simm = relative_addr12(addr12))
instruction i_blez_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "blez" "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000101:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_blez_alias(el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_blez_alias(rs2 = x_0_alias, simm = relative_addr12(addr12))
instruction i_blez_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "blez" "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000101:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_blez_alias(el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_blez_alias(rs2 = xpr_general, simm = relative_addr12(addr12))
instruction i_blez_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "blez" reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000101:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_blez_alias(el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_bltz_alias(rs1 = x_0, simm = relative_addr12(addr12))
instruction i_bltz_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bltz" "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000100:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bltz_alias(el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_bltz_alias(rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_bltz_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bltz" "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000100:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bltz_alias(el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_bltz_alias(rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_bltz_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bltz" reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b100:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bltz_alias(el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_bnez_alias(rs1 = x_0, simm = relative_addr12(addr12))
instruction i_bnez_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bnez" "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000001:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bnez_alias(el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_bnez_alias(rs1 = x_0_alias, simm = relative_addr12(addr12))
instruction i_bnez_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bnez" "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000001:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bnez_alias(el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_bnez_alias(rs1 = xpr_general, simm = relative_addr12(addr12))
instruction i_bnez_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr124simm1_15relative_addr12") };
    assembly { "bnez" reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b001:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_bnez_alias(el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_beq, rs1 = x_0, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_beq__x_0__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "beq" "x0"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000000:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_0,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %9 = i1 -1;
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_beq, el:x_0, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_beq, rs1 = x_0, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_beq__x_0__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "beq" "x0"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000000:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_beq, el:x_0, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_beq, rs1 = x_0, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_beq__x_0__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "beq" "x0"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000000:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 seteq(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_beq, el:x_0, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_beq, rs1 = x_0_alias, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_beq__x_0_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "beq" "zero"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000000:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_beq, el:x_0_alias, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_beq, rs1 = x_0_alias, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_beq__x_0_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "beq" "zero"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000000:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_beq, el:x_0_alias, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_beq, rs1 = x_0_alias, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_beq__x_0_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "beq" "zero"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000000:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_beq, el:x_0_alias, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_beq, rs1 = xpr_general, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_beq__xpr_general__x_0__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "beq" reg_0~"," "x0"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b000:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 seteq(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_beq, el:xpr_general, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_beq, rs1 = xpr_general, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_beq__xpr_general__x_0_alias__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "beq" reg_0~"," "zero"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b000:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_beq, el:xpr_general, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_beq, rs1 = xpr_general, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_beq__xpr_general__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "beq" reg_0~"," reg_1~"," imm_2 };
    binary { imm_2[11..11] imm_2[9..4] reg_1[4..0] reg_0[4..0] 0b000:bit[3] imm_2[3..0] imm_2[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 regop(reg_1);
        %9 = i1 seteq(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_beq, el:xpr_general, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bge, rs1 = x_0, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bge__x_0__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bge" "x0"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000101:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_0,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %9 = i1 -1;
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_bge, el:x_0, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bge, rs1 = x_0, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bge__x_0__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bge" "x0"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000101:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bge, el:x_0, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bge, rs1 = x_0, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bge__x_0__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bge" "x0"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000101:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 1;
        %9 = i1 setlt(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_bge, el:x_0, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bge, rs1 = x_0_alias, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bge__x_0_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bge" "zero"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000101:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bge, el:x_0_alias, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bge, rs1 = x_0_alias, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bge__x_0_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bge" "zero"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000101:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bge, el:x_0_alias, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bge, rs1 = x_0_alias, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bge__x_0_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bge" "zero"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000101:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bge, el:x_0_alias, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bge, rs1 = xpr_general, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bge__xpr_general__x_0__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bge" reg_0~"," "x0"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b101:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 -1;
        %9 = i1 setgt(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_bge, el:xpr_general, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bge, rs1 = xpr_general, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bge__xpr_general__x_0_alias__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bge" reg_0~"," "zero"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b101:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bge, el:xpr_general, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bge, rs1 = xpr_general, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bge__xpr_general__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bge" reg_0~"," reg_1~"," imm_2 };
    binary { imm_2[11..11] imm_2[9..4] reg_1[4..0] reg_0[4..0] 0b101:bit[3] imm_2[3..0] imm_2[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 regop(reg_1);
        %9 = i1 setge(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_bge, el:xpr_general, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bgeu, rs1 = x_0, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bgeu__x_0__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bgeu" "x0"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000111:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_0,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %9 = i1 -1;
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_bgeu, el:x_0, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bgeu, rs1 = x_0, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bgeu__x_0__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bgeu" "x0"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000111:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bgeu, el:x_0, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bgeu, rs1 = x_0, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bgeu__x_0__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bgeu" "x0"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000111:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 seteq(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_bgeu, el:x_0, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bgeu, rs1 = x_0_alias, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bgeu__x_0_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bgeu" "zero"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000111:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bgeu, el:x_0_alias, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bgeu, rs1 = x_0_alias, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bgeu__x_0_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bgeu" "zero"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000111:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bgeu, el:x_0_alias, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bgeu, rs1 = x_0_alias, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bgeu__x_0_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bgeu" "zero"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000111:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bgeu, el:x_0_alias, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bgeu, rs1 = xpr_general, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bgeu__xpr_general__x_0__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bgeu" reg_0~"," "x0"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b111:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %9 = i1 -1;
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_bgeu, el:xpr_general, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bgeu, rs1 = xpr_general, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bgeu__xpr_general__x_0_alias__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bgeu" reg_0~"," "zero"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b111:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bgeu, el:xpr_general, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bgeu, rs1 = xpr_general, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bgeu__xpr_general__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bgeu" reg_0~"," reg_1~"," imm_2 };
    binary { imm_2[11..11] imm_2[9..4] reg_1[4..0] reg_0[4..0] 0b111:bit[3] imm_2[3..0] imm_2[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 regop(reg_1);
        %9 = i1 setuge(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_bgeu, el:xpr_general, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_blt, rs1 = x_0, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_blt__x_0__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "blt" "x0"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000100:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics
    {
    };
    element_tree = "el:i_btype_branches(el:opc_blt, el:x_0, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_blt, rs1 = x_0, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_blt__x_0__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "blt" "x0"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000100:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_blt, el:x_0, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_blt, rs1 = x_0, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_blt__x_0__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "blt" "x0"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000100:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 setgt(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_blt, el:x_0, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_blt, rs1 = x_0_alias, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_blt__x_0_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "blt" "zero"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000100:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_blt, el:x_0_alias, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_blt, rs1 = x_0_alias, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_blt__x_0_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "blt" "zero"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000100:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_blt, el:x_0_alias, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_blt, rs1 = x_0_alias, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_blt__x_0_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "blt" "zero"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000100:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_blt, el:x_0_alias, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_blt, rs1 = xpr_general, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_blt__xpr_general__x_0__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "blt" reg_0~"," "x0"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b100:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 setlt(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_blt, el:xpr_general, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_blt, rs1 = xpr_general, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_blt__xpr_general__x_0_alias__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "blt" reg_0~"," "zero"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b100:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_blt, el:xpr_general, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_blt, rs1 = xpr_general, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_blt__xpr_general__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "blt" reg_0~"," reg_1~"," imm_2 };
    binary { imm_2[11..11] imm_2[9..4] reg_1[4..0] reg_0[4..0] 0b100:bit[3] imm_2[3..0] imm_2[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 regop(reg_1);
        %9 = i1 setlt(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_blt, el:xpr_general, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bltu, rs1 = x_0, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bltu__x_0__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bltu" "x0"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000110:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics
    {
    };
    element_tree = "el:i_btype_branches(el:opc_bltu, el:x_0, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bltu, rs1 = x_0, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bltu__x_0__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bltu" "x0"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000110:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bltu, el:x_0, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bltu, rs1 = x_0, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bltu__x_0__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bltu" "x0"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000110:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 setne(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_bltu, el:x_0, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bltu, rs1 = x_0_alias, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bltu__x_0_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bltu" "zero"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000110:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bltu, el:x_0_alias, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bltu, rs1 = x_0_alias, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bltu__x_0_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bltu" "zero"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000110:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bltu, el:x_0_alias, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bltu, rs1 = x_0_alias, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bltu__x_0_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bltu" "zero"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000110:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bltu, el:x_0_alias, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bltu, rs1 = xpr_general, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bltu__xpr_general__x_0__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bltu" reg_0~"," "x0"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b110:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics
    {
    };
    element_tree = "el:i_btype_branches(el:opc_bltu, el:xpr_general, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bltu, rs1 = xpr_general, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bltu__xpr_general__x_0_alias__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bltu" reg_0~"," "zero"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b110:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bltu, el:xpr_general, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bltu, rs1 = xpr_general, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bltu__xpr_general__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bltu" reg_0~"," reg_1~"," imm_2 };
    binary { imm_2[11..11] imm_2[9..4] reg_1[4..0] reg_0[4..0] 0b110:bit[3] imm_2[3..0] imm_2[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 regop(reg_1);
        %9 = i1 setult(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_bltu, el:xpr_general, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bne, rs1 = x_0, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bne__x_0__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bne" "x0"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000001:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics
    {
    };
    element_tree = "el:i_btype_branches(el:opc_bne, el:x_0, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bne, rs1 = x_0, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bne__x_0__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bne" "x0"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000001:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bne, el:x_0, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bne, rs1 = x_0, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bne__x_0__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bne" "x0"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000001:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 setne(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_bne, el:x_0, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bne, rs1 = x_0_alias, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bne__x_0_alias__x_0__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bne" "zero"~"," "x0"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000001:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bne, el:x_0_alias, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bne, rs1 = x_0_alias, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bne__x_0_alias__x_0_alias__relative_addr12__
{
    operands { imm_0 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bne" "zero"~"," "zero"~"," imm_0 };
    binary { imm_0[11..11] imm_0[9..4] 0b0000000000001:bit[13] imm_0[3..0] imm_0[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bne, el:x_0_alias, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bne, rs1 = x_0_alias, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bne__x_0_alias__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bne" "zero"~"," reg_0~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] reg_0[4..0] 0b00000001:bit[8] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bne, el:x_0_alias, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bne, rs1 = xpr_general, rs2 = x_0, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bne__xpr_general__x_0__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bne" reg_0~"," "x0"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b001:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 0;
        %9 = i1 setne(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_bne, el:xpr_general, el:x_0, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bne, rs1 = xpr_general, rs2 = x_0_alias, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bne__xpr_general__x_0_alias__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bne" reg_0~"," "zero"~"," imm_1 };
    binary { imm_1[11..11] imm_1[9..4] 0b00000:bit[5] reg_0[4..0] 0b001:bit[3] imm_1[3..0] imm_1[10..10] 0b1100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_btype_branches(el:opc_bne, el:xpr_general, el:x_0_alias, el:relative_addr12)";
    slots = {{0}};
};

/// i_btype_branches(opc = opc_bne, rs1 = xpr_general, rs2 = xpr_general, imm = relative_addr12(addr12))
instruction i_btype_branches__opc_bne__xpr_general__xpr_general__relative_addr12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    assembly { "bne" reg_0~"," reg_1~"," imm_2 };
    binary { imm_2[11..11] imm_2[9..4] reg_1[4..0] reg_0[4..0] 0b001:bit[3] imm_2[3..0] imm_2[10..10] 0b1100011:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_0);
        %11 = i32 regop(reg_1);
        %9 = i1 setne(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_btype_branches(el:opc_bne, el:xpr_general, el:xpr_general, el:relative_addr12)";
    slots = {{0}};
};

/// i_call_alias(simm = relative_addr20(addr20))
instruction i_call_alias__relative_addr20__
{
    operands { imm_0 = immop("MI6addr20IH1_13default_start18_15relative_addr204simm1_15relative_addr20") };
    assembly { "call" imm_0 };
    binary { imm_0[19..19] imm_0[9..0] imm_0[10..10] imm_0[18..11] 0b000011101111:bit[12] };
    semantics
    {
        %5 = i32 get_pc();
        reg(rf_xpr, 1) = i32 %5;
        %8 = i32 immop(imm_0,1,21,1,0);
        %7 = i32 add(i32 %5, i32 %8);
        %9 = i32 -4;
        %6 = i32 add(i32 %7, i32 %9);
        %10 = i1 -1;
        jump(i32 %6, i1 %10);
    };
    alias = ASSEMBLER | COMPILER;
    element_tree = "el:i_call_alias(el:relative_addr20)";
    slots = {{0}};
};

/// i_call_reg_alias(simm = simm12(value), rs1 = x_0)
instruction i_call_reg_alias__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "call_reg"~"," imm_0 "(" "x0" ")" };
    binary { imm_0[11..0] 0b00000000000011100111:bit[20] };
    semantics
    {
        %5 = i32 get_pc();
        reg(rf_xpr, 1) = i32 %5;
        %6 = i32 immop(imm_0,1,12,2,0);
        %7 = i1 -1;
        jump(i32 %6, i1 %7);
    };
    alias = ASSEMBLER | COMPILER;
    element_tree = "el:i_call_reg_alias(el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_call_reg_alias(simm = simm12(value), rs1 = x_0_alias)
instruction i_call_reg_alias__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "call_reg"~"," imm_0 "(" "zero" ")" };
    binary { imm_0[11..0] 0b00000000000011100111:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_call_reg_alias(el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_call_reg_alias(simm = simm12(value), rs1 = xpr_general)
instruction i_call_reg_alias__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "call_reg"~"," imm_0 "(" reg_1 ")" };
    binary { imm_0[11..0] reg_1[4..0] 0b000000011100111:bit[15] };
    semantics
    {
        %5 = i32 get_pc();
        reg(rf_xpr, 1) = i32 %5;
        %8 = i32 regop(reg_1);
        %9 = i32 immop(imm_0,1,12,0,0);
        %7 = i32 add(i32 %8, i32 %9);
        %10 = i32 -4;
        %6 = i32 and(i32 %7, i32 %10);
        %11 = i1 -1;
        jump(i32 %6, i1 %11);
    };
    alias = ASSEMBLER | COMPILER;
    element_tree = "el:i_call_reg_alias(el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_halt(opc = opc_halt)
instruction i_halt__opc_halt__
{
    operands {};
    assembly { "halt" };
    binary { 0b00000000000000000000000000111111:bit[32] };
    semantics
    {
        halt();
    };
    validity = COMPILER_UNUSED;
    element_tree = "el:i_halt(el:opc_halt)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_addi, rd = x_0, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_addi__x_0__x_0__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "addi" "x0" ", " "x0" ", " imm_0 };
    binary { imm_0[11..0] 0b00000000000000010011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_itype_alu(el:opc_addi, el:x_0, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_addi, rd = x_0, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_addi__x_0__x_0_alias__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "addi" "x0" ", " "zero" ", " imm_0 };
    binary { imm_0[11..0] 0b00000000000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_addi, el:x_0, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_addi, rd = x_0, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_addi__x_0__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "addi" "x0" ", " reg_0 ", " imm_1 };
    binary { imm_1[11..0] reg_0[4..0] 0b000000000010011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_itype_alu(el:opc_addi, el:x_0, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_addi, rd = x_0_alias, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_addi__x_0_alias__x_0__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "addi" "zero" ", " "x0" ", " imm_0 };
    binary { imm_0[11..0] 0b00000000000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_addi, el:x_0_alias, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_addi, rd = x_0_alias, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_addi__x_0_alias__x_0_alias__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "addi" "zero" ", " "zero" ", " imm_0 };
    binary { imm_0[11..0] 0b00000000000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_addi, el:x_0_alias, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_addi, rd = x_0_alias, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_addi__x_0_alias__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "addi" "zero" ", " reg_0 ", " imm_1 };
    binary { imm_1[11..0] reg_0[4..0] 0b000000000010011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_addi, el:x_0_alias, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_addi, rd = xpr_general, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_addi__xpr_general__x_0__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "addi" reg_0 ", " "x0" ", " imm_1 };
    binary { imm_1[11..0] 0b00000000:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %4 = i32 immop(imm_1,1,12,0,0);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_itype_alu(el:opc_addi, el:xpr_general, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_addi, rd = xpr_general, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_addi__xpr_general__x_0_alias__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "addi" reg_0 ", " "zero" ", " imm_1 };
    binary { imm_1[11..0] 0b00000000:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_addi, el:xpr_general, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_addi, rd = xpr_general, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_addi__xpr_general__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "addi" reg_0 ", " reg_1 ", " imm_2 };
    binary { imm_2[11..0] reg_1[4..0] 0b000:bit[3] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_2,1,12,0,0);
        %4 = i32 add(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_itype_alu(el:opc_addi, el:xpr_general, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_andi, rd = x_0, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_andi__x_0__x_0__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "andi" "x0" ", " "x0" ", " imm_0 };
    binary { imm_0[11..0] 0b00000111000000010011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_itype_alu(el:opc_andi, el:x_0, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_andi, rd = x_0, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_andi__x_0__x_0_alias__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "andi" "x0" ", " "zero" ", " imm_0 };
    binary { imm_0[11..0] 0b00000111000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_andi, el:x_0, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_andi, rd = x_0, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_andi__x_0__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "andi" "x0" ", " reg_0 ", " imm_1 };
    binary { imm_1[11..0] reg_0[4..0] 0b111000000010011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_itype_alu(el:opc_andi, el:x_0, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_andi, rd = x_0_alias, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_andi__x_0_alias__x_0__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "andi" "zero" ", " "x0" ", " imm_0 };
    binary { imm_0[11..0] 0b00000111000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_andi, el:x_0_alias, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_andi, rd = x_0_alias, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_andi__x_0_alias__x_0_alias__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "andi" "zero" ", " "zero" ", " imm_0 };
    binary { imm_0[11..0] 0b00000111000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_andi, el:x_0_alias, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_andi, rd = x_0_alias, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_andi__x_0_alias__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "andi" "zero" ", " reg_0 ", " imm_1 };
    binary { imm_1[11..0] reg_0[4..0] 0b111000000010011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_andi, el:x_0_alias, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_andi, rd = xpr_general, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_andi__xpr_general__x_0__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "andi" reg_0 ", " "x0" ", " imm_1 };
    binary { imm_1[11..0] 0b00000111:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_itype_alu(el:opc_andi, el:xpr_general, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_andi, rd = xpr_general, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_andi__xpr_general__x_0_alias__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "andi" reg_0 ", " "zero" ", " imm_1 };
    binary { imm_1[11..0] 0b00000111:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_andi, el:xpr_general, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_andi, rd = xpr_general, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_andi__xpr_general__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "andi" reg_0 ", " reg_1 ", " imm_2 };
    binary { imm_2[11..0] reg_1[4..0] 0b111:bit[3] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_2,1,12,0,0);
        %4 = i32 and(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_itype_alu(el:opc_andi, el:xpr_general, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_ori, rd = x_0, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_ori__x_0__x_0__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "ori" "x0" ", " "x0" ", " imm_0 };
    binary { imm_0[11..0] 0b00000110000000010011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_itype_alu(el:opc_ori, el:x_0, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_ori, rd = x_0, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_ori__x_0__x_0_alias__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "ori" "x0" ", " "zero" ", " imm_0 };
    binary { imm_0[11..0] 0b00000110000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_ori, el:x_0, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_ori, rd = x_0, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_ori__x_0__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "ori" "x0" ", " reg_0 ", " imm_1 };
    binary { imm_1[11..0] reg_0[4..0] 0b110000000010011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_itype_alu(el:opc_ori, el:x_0, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_ori, rd = x_0_alias, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_ori__x_0_alias__x_0__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "ori" "zero" ", " "x0" ", " imm_0 };
    binary { imm_0[11..0] 0b00000110000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_ori, el:x_0_alias, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_ori, rd = x_0_alias, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_ori__x_0_alias__x_0_alias__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "ori" "zero" ", " "zero" ", " imm_0 };
    binary { imm_0[11..0] 0b00000110000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_ori, el:x_0_alias, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_ori, rd = x_0_alias, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_ori__x_0_alias__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "ori" "zero" ", " reg_0 ", " imm_1 };
    binary { imm_1[11..0] reg_0[4..0] 0b110000000010011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_ori, el:x_0_alias, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_ori, rd = xpr_general, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_ori__xpr_general__x_0__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "ori" reg_0 ", " "x0" ", " imm_1 };
    binary { imm_1[11..0] 0b00000110:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %4 = i32 immop(imm_1,1,12,0,0);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_itype_alu(el:opc_ori, el:xpr_general, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_ori, rd = xpr_general, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_ori__xpr_general__x_0_alias__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "ori" reg_0 ", " "zero" ", " imm_1 };
    binary { imm_1[11..0] 0b00000110:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_ori, el:xpr_general, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_ori, rd = xpr_general, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_ori__xpr_general__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "ori" reg_0 ", " reg_1 ", " imm_2 };
    binary { imm_2[11..0] reg_1[4..0] 0b110:bit[3] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_2,1,12,0,0);
        %4 = i32 or(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_itype_alu(el:opc_ori, el:xpr_general, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_slti, rd = x_0, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_slti__x_0__x_0__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "slti" "x0" ", " "x0" ", " imm_0 };
    binary { imm_0[11..0] 0b00000010000000010011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_itype_alu(el:opc_slti, el:x_0, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_slti, rd = x_0, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_slti__x_0__x_0_alias__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "slti" "x0" ", " "zero" ", " imm_0 };
    binary { imm_0[11..0] 0b00000010000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_slti, el:x_0, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_slti, rd = x_0, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_slti__x_0__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "slti" "x0" ", " reg_0 ", " imm_1 };
    binary { imm_1[11..0] reg_0[4..0] 0b010000000010011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_itype_alu(el:opc_slti, el:x_0, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_slti, rd = x_0_alias, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_slti__x_0_alias__x_0__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "slti" "zero" ", " "x0" ", " imm_0 };
    binary { imm_0[11..0] 0b00000010000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_slti, el:x_0_alias, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_slti, rd = x_0_alias, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_slti__x_0_alias__x_0_alias__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "slti" "zero" ", " "zero" ", " imm_0 };
    binary { imm_0[11..0] 0b00000010000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_slti, el:x_0_alias, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_slti, rd = x_0_alias, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_slti__x_0_alias__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "slti" "zero" ", " reg_0 ", " imm_1 };
    binary { imm_1[11..0] reg_0[4..0] 0b010000000010011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_slti, el:x_0_alias, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_slti, rd = xpr_general, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_slti__xpr_general__x_0__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "slti" reg_0 ", " "x0" ", " imm_1 };
    binary { imm_1[11..0] 0b00000010:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %6 = i32 immop(imm_1,1,12,0,0);
        %7 = i32 0;
        %5 = i1 setgt(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_itype_alu(el:opc_slti, el:xpr_general, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_slti, rd = xpr_general, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_slti__xpr_general__x_0_alias__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "slti" reg_0 ", " "zero" ", " imm_1 };
    binary { imm_1[11..0] 0b00000010:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_slti, el:xpr_general, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_slti, rd = xpr_general, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_slti__xpr_general__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "slti" reg_0 ", " reg_1 ", " imm_2 };
    binary { imm_2[11..0] reg_1[4..0] 0b010:bit[3] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %6 = i32 regop(reg_1);
        %7 = i32 immop(imm_2,1,12,0,0);
        %5 = i1 setlt(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_itype_alu(el:opc_slti, el:xpr_general, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_sltiu, rd = x_0, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_sltiu__x_0__x_0__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sltiu" "x0" ", " "x0" ", " imm_0 };
    binary { imm_0[11..0] 0b00000011000000010011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_itype_alu(el:opc_sltiu, el:x_0, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_sltiu, rd = x_0, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_sltiu__x_0__x_0_alias__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sltiu" "x0" ", " "zero" ", " imm_0 };
    binary { imm_0[11..0] 0b00000011000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_sltiu, el:x_0, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_sltiu, rd = x_0, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_sltiu__x_0__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sltiu" "x0" ", " reg_0 ", " imm_1 };
    binary { imm_1[11..0] reg_0[4..0] 0b011000000010011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_itype_alu(el:opc_sltiu, el:x_0, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_sltiu, rd = x_0_alias, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_sltiu__x_0_alias__x_0__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sltiu" "zero" ", " "x0" ", " imm_0 };
    binary { imm_0[11..0] 0b00000011000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_sltiu, el:x_0_alias, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_sltiu, rd = x_0_alias, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_sltiu__x_0_alias__x_0_alias__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sltiu" "zero" ", " "zero" ", " imm_0 };
    binary { imm_0[11..0] 0b00000011000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_sltiu, el:x_0_alias, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_sltiu, rd = x_0_alias, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_sltiu__x_0_alias__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sltiu" "zero" ", " reg_0 ", " imm_1 };
    binary { imm_1[11..0] reg_0[4..0] 0b011000000010011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_sltiu, el:x_0_alias, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_sltiu, rd = xpr_general, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_sltiu__xpr_general__x_0__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sltiu" reg_0 ", " "x0" ", " imm_1 };
    binary { imm_1[11..0] 0b00000011:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %6 = i32 immop(imm_1,1,12,0,0);
        %7 = i32 0;
        %5 = i1 setne(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_itype_alu(el:opc_sltiu, el:xpr_general, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_sltiu, rd = xpr_general, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_sltiu__xpr_general__x_0_alias__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sltiu" reg_0 ", " "zero" ", " imm_1 };
    binary { imm_1[11..0] 0b00000011:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_sltiu, el:xpr_general, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_sltiu, rd = xpr_general, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_sltiu__xpr_general__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sltiu" reg_0 ", " reg_1 ", " imm_2 };
    binary { imm_2[11..0] reg_1[4..0] 0b011:bit[3] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %6 = i32 regop(reg_1);
        %7 = i32 immop(imm_2,1,12,0,0);
        %5 = i1 setult(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_itype_alu(el:opc_sltiu, el:xpr_general, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_xori, rd = x_0, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_xori__x_0__x_0__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "xori" "x0" ", " "x0" ", " imm_0 };
    binary { imm_0[11..0] 0b00000100000000010011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_itype_alu(el:opc_xori, el:x_0, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_xori, rd = x_0, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_xori__x_0__x_0_alias__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "xori" "x0" ", " "zero" ", " imm_0 };
    binary { imm_0[11..0] 0b00000100000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_xori, el:x_0, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_xori, rd = x_0, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_xori__x_0__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "xori" "x0" ", " reg_0 ", " imm_1 };
    binary { imm_1[11..0] reg_0[4..0] 0b100000000010011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_itype_alu(el:opc_xori, el:x_0, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_xori, rd = x_0_alias, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_xori__x_0_alias__x_0__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "xori" "zero" ", " "x0" ", " imm_0 };
    binary { imm_0[11..0] 0b00000100000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_xori, el:x_0_alias, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_xori, rd = x_0_alias, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_xori__x_0_alias__x_0_alias__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "xori" "zero" ", " "zero" ", " imm_0 };
    binary { imm_0[11..0] 0b00000100000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_xori, el:x_0_alias, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_xori, rd = x_0_alias, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_xori__x_0_alias__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "xori" "zero" ", " reg_0 ", " imm_1 };
    binary { imm_1[11..0] reg_0[4..0] 0b100000000010011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_xori, el:x_0_alias, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_xori, rd = xpr_general, rs1 = x_0, simm = simm12(value))
instruction i_itype_alu__opc_xori__xpr_general__x_0__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "xori" reg_0 ", " "x0" ", " imm_1 };
    binary { imm_1[11..0] 0b00000100:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %4 = i32 immop(imm_1,1,12,0,0);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_itype_alu(el:opc_xori, el:xpr_general, el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_xori, rd = xpr_general, rs1 = x_0_alias, simm = simm12(value))
instruction i_itype_alu__opc_xori__xpr_general__x_0_alias__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "xori" reg_0 ", " "zero" ", " imm_1 };
    binary { imm_1[11..0] 0b00000100:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_alu(el:opc_xori, el:xpr_general, el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_itype_alu(opc = opc_xori, rd = xpr_general, rs1 = xpr_general, simm = simm12(value))
instruction i_itype_alu__opc_xori__xpr_general__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "xori" reg_0 ", " reg_1 ", " imm_2 };
    binary { imm_2[11..0] reg_1[4..0] 0b100:bit[3] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_2,1,12,0,0);
        %4 = i32 xor(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_itype_alu(el:opc_xori, el:xpr_general, el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_itype_jlreg(opc = opc_jalr, rd = x_0, simm = simm12(value), rs1 = x_0)
instruction i_itype_jlreg__opc_jalr__x_0__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "jalr" "x0" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..0] 0b00000000000001100111:bit[20] };
    semantics
    {
        %4 = i32 immop(imm_0,1,12,1,0);
        %5 = i1 -1;
        jump(i32 %4, i1 %5);
    };
    element_tree = "el:i_itype_jlreg(el:opc_jalr, el:x_0, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_itype_jlreg(opc = opc_jalr, rd = x_0, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_jlreg__opc_jalr__x_0__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "jalr" "x0" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..0] 0b00000000000001100111:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_jlreg(el:opc_jalr, el:x_0, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_jlreg(opc = opc_jalr, rd = x_0, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_jlreg__opc_jalr__x_0__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "jalr" "x0" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..0] reg_1[4..0] 0b000000001100111:bit[15] };
    semantics
    {
        %6 = i32 regop(reg_1);
        %7 = i32 immop(imm_0,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -2;
        %4 = i32 and(i32 %5, i32 %8);
        %9 = i1 -1;
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_itype_jlreg(el:opc_jalr, el:x_0, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_itype_jlreg(opc = opc_jalr, rd = x_0_alias, simm = simm12(value), rs1 = x_0)
instruction i_itype_jlreg__opc_jalr__x_0_alias__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "jalr" "zero" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..0] 0b00000000000001100111:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_jlreg(el:opc_jalr, el:x_0_alias, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_itype_jlreg(opc = opc_jalr, rd = x_0_alias, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_jlreg__opc_jalr__x_0_alias__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "jalr" "zero" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..0] 0b00000000000001100111:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_jlreg(el:opc_jalr, el:x_0_alias, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_jlreg(opc = opc_jalr, rd = x_0_alias, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_jlreg__opc_jalr__x_0_alias__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "jalr" "zero" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..0] reg_1[4..0] 0b000000001100111:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_jlreg(el:opc_jalr, el:x_0_alias, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_itype_jlreg(opc = opc_jalr, rd = xpr_general, simm = simm12(value), rs1 = x_0)
instruction i_itype_jlreg__opc_jalr__xpr_general__simm12__x_0__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "jalr" reg_0 ", " imm_1 "(" "x0" ")" };
    binary { imm_1[11..0] 0b00000000:bit[8] reg_0[4..0] 0b1100111:bit[7] };
    semantics
    {
        %5 = i32 get_pc();
        regop(reg_0) = i32 %5;
        %6 = i32 immop(imm_1,1,12,1,0);
        %7 = i1 -1;
        jump(i32 %6, i1 %7);
    };
    element_tree = "el:i_itype_jlreg(el:opc_jalr, el:xpr_general, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_itype_jlreg(opc = opc_jalr, rd = xpr_general, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_jlreg__opc_jalr__xpr_general__simm12__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "jalr" reg_0 ", " imm_1 "(" "zero" ")" };
    binary { imm_1[11..0] 0b00000000:bit[8] reg_0[4..0] 0b1100111:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_jlreg(el:opc_jalr, el:xpr_general, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_jlreg(opc = opc_jalr, rd = xpr_general, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_jlreg__opc_jalr__xpr_general__simm12__xpr_general__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_2 = regop(xpr_general) };
    assembly { "jalr" reg_0 ", " imm_1 "(" reg_2 ")" };
    binary { imm_1[11..0] reg_2[4..0] 0b000:bit[3] reg_0[4..0] 0b1100111:bit[7] };
    semantics
    {
        %5 = i32 get_pc();
        regop(reg_0) = i32 %5;
        %8 = i32 regop(reg_2);
        %9 = i32 immop(imm_1,1,12,0,0);
        %7 = i32 add(i32 %8, i32 %9);
        %10 = i32 -2;
        %6 = i32 and(i32 %7, i32 %10);
        %11 = i1 -1;
        jump(i32 %6, i1 %11);
    };
    element_tree = "el:i_itype_jlreg(el:opc_jalr, el:xpr_general, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lb, rd = x_0, simm = simm12(value), rs1 = x_0)
instruction i_itype_loads__opc_lb__x_0__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lb" "x0" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..0] 0b00000000000000000011:bit[20] };
    semantics
    {
        %4 = i32 immop(imm_0,1,12,0,0);
        %2 = i8 load(i32 %4, 0);
    };
    element_tree = "el:i_itype_loads(el:opc_lb, el:x_0, el:simm12, el:x_0)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lb, rd = x_0, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_loads__opc_lb__x_0__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lb" "x0" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..0] 0b00000000000000000011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lb, el:x_0, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lb, rd = x_0, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_loads__opc_lb__x_0__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "lb" "x0" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..0] reg_1[4..0] 0b000000000000011:bit[15] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_0,1,12,0,0);
        %4 = i32 add(i32 %5, i32 %6);
        %2 = i8 load(i32 %4, 0);
    };
    element_tree = "el:i_itype_loads(el:opc_lb, el:x_0, el:simm12, el:xpr_general)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lb, rd = x_0_alias, simm = simm12(value), rs1 = x_0)
instruction i_itype_loads__opc_lb__x_0_alias__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lb" "zero" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..0] 0b00000000000000000011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lb, el:x_0_alias, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lb, rd = x_0_alias, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_loads__opc_lb__x_0_alias__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lb" "zero" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..0] 0b00000000000000000011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lb, el:x_0_alias, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lb, rd = x_0_alias, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_loads__opc_lb__x_0_alias__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "lb" "zero" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..0] reg_1[4..0] 0b000000000000011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lb, el:x_0_alias, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lb, rd = xpr_general, simm = simm12(value), rs1 = x_0)
instruction i_itype_loads__opc_lb__xpr_general__simm12__x_0__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lb" reg_0 ", " imm_1 "(" "x0" ")" };
    binary { imm_1[11..0] 0b00000000:bit[8] reg_0[4..0] 0b0000011:bit[7] };
    semantics
    {
        %5 = i32 immop(imm_1,1,12,0,0);
        %3 = i8 load(i32 %5, 0);
        %6 = i32 sign_extend(i8 %3);
        regop(reg_0) = i32 %6;
    };
    element_tree = "el:i_itype_loads(el:opc_lb, el:xpr_general, el:simm12, el:x_0)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lb, rd = xpr_general, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_loads__opc_lb__xpr_general__simm12__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lb" reg_0 ", " imm_1 "(" "zero" ")" };
    binary { imm_1[11..0] 0b00000000:bit[8] reg_0[4..0] 0b0000011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lb, el:xpr_general, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lb, rd = xpr_general, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_loads__opc_lb__xpr_general__simm12__xpr_general__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_2 = regop(xpr_general) };
    assembly { "lb" reg_0 ", " imm_1 "(" reg_2 ")" };
    binary { imm_1[11..0] reg_2[4..0] 0b000:bit[3] reg_0[4..0] 0b0000011:bit[7] };
    semantics
    {
        %6 = i32 regop(reg_2);
        %7 = i32 immop(imm_1,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        %3 = i8 load(i32 %5, 0);
        %8 = i32 sign_extend(i8 %3);
        regop(reg_0) = i32 %8;
    };
    element_tree = "el:i_itype_loads(el:opc_lb, el:xpr_general, el:simm12, el:xpr_general)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lbu, rd = x_0, simm = simm12(value), rs1 = x_0)
instruction i_itype_loads__opc_lbu__x_0__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lbu" "x0" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..0] 0b00000100000000000011:bit[20] };
    semantics
    {
        %4 = i32 immop(imm_0,1,12,0,0);
        %2 = i8 load(i32 %4, 0);
    };
    element_tree = "el:i_itype_loads(el:opc_lbu, el:x_0, el:simm12, el:x_0)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lbu, rd = x_0, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_loads__opc_lbu__x_0__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lbu" "x0" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..0] 0b00000100000000000011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lbu, el:x_0, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lbu, rd = x_0, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_loads__opc_lbu__x_0__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "lbu" "x0" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..0] reg_1[4..0] 0b100000000000011:bit[15] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_0,1,12,0,0);
        %4 = i32 add(i32 %5, i32 %6);
        %2 = i8 load(i32 %4, 0);
    };
    element_tree = "el:i_itype_loads(el:opc_lbu, el:x_0, el:simm12, el:xpr_general)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lbu, rd = x_0_alias, simm = simm12(value), rs1 = x_0)
instruction i_itype_loads__opc_lbu__x_0_alias__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lbu" "zero" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..0] 0b00000100000000000011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lbu, el:x_0_alias, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lbu, rd = x_0_alias, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_loads__opc_lbu__x_0_alias__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lbu" "zero" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..0] 0b00000100000000000011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lbu, el:x_0_alias, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lbu, rd = x_0_alias, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_loads__opc_lbu__x_0_alias__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "lbu" "zero" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..0] reg_1[4..0] 0b100000000000011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lbu, el:x_0_alias, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lbu, rd = xpr_general, simm = simm12(value), rs1 = x_0)
instruction i_itype_loads__opc_lbu__xpr_general__simm12__x_0__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lbu" reg_0 ", " imm_1 "(" "x0" ")" };
    binary { imm_1[11..0] 0b00000100:bit[8] reg_0[4..0] 0b0000011:bit[7] };
    semantics
    {
        %5 = i32 immop(imm_1,1,12,0,0);
        %3 = i8 load(i32 %5, 0);
        %6 = i32 zero_extend(i8 %3);
        regop(reg_0) = i32 %6;
    };
    element_tree = "el:i_itype_loads(el:opc_lbu, el:xpr_general, el:simm12, el:x_0)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lbu, rd = xpr_general, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_loads__opc_lbu__xpr_general__simm12__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lbu" reg_0 ", " imm_1 "(" "zero" ")" };
    binary { imm_1[11..0] 0b00000100:bit[8] reg_0[4..0] 0b0000011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lbu, el:xpr_general, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lbu, rd = xpr_general, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_loads__opc_lbu__xpr_general__simm12__xpr_general__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_2 = regop(xpr_general) };
    assembly { "lbu" reg_0 ", " imm_1 "(" reg_2 ")" };
    binary { imm_1[11..0] reg_2[4..0] 0b100:bit[3] reg_0[4..0] 0b0000011:bit[7] };
    semantics
    {
        %6 = i32 regop(reg_2);
        %7 = i32 immop(imm_1,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        %3 = i8 load(i32 %5, 0);
        %8 = i32 zero_extend(i8 %3);
        regop(reg_0) = i32 %8;
    };
    element_tree = "el:i_itype_loads(el:opc_lbu, el:xpr_general, el:simm12, el:xpr_general)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lh, rd = x_0, simm = simm12(value), rs1 = x_0)
instruction i_itype_loads__opc_lh__x_0__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lh" "x0" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..0] 0b00000001000000000011:bit[20] };
    semantics
    {
        %4 = i32 immop(imm_0,1,12,0,0);
        %2 = i16 load(i32 %4, 0);
    };
    element_tree = "el:i_itype_loads(el:opc_lh, el:x_0, el:simm12, el:x_0)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lh, rd = x_0, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_loads__opc_lh__x_0__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lh" "x0" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..0] 0b00000001000000000011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lh, el:x_0, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lh, rd = x_0, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_loads__opc_lh__x_0__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "lh" "x0" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..0] reg_1[4..0] 0b001000000000011:bit[15] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_0,1,12,0,0);
        %4 = i32 add(i32 %5, i32 %6);
        %2 = i16 load(i32 %4, 0);
    };
    element_tree = "el:i_itype_loads(el:opc_lh, el:x_0, el:simm12, el:xpr_general)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lh, rd = x_0_alias, simm = simm12(value), rs1 = x_0)
instruction i_itype_loads__opc_lh__x_0_alias__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lh" "zero" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..0] 0b00000001000000000011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lh, el:x_0_alias, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lh, rd = x_0_alias, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_loads__opc_lh__x_0_alias__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lh" "zero" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..0] 0b00000001000000000011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lh, el:x_0_alias, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lh, rd = x_0_alias, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_loads__opc_lh__x_0_alias__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "lh" "zero" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..0] reg_1[4..0] 0b001000000000011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lh, el:x_0_alias, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lh, rd = xpr_general, simm = simm12(value), rs1 = x_0)
instruction i_itype_loads__opc_lh__xpr_general__simm12__x_0__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lh" reg_0 ", " imm_1 "(" "x0" ")" };
    binary { imm_1[11..0] 0b00000001:bit[8] reg_0[4..0] 0b0000011:bit[7] };
    semantics
    {
        %5 = i32 immop(imm_1,1,12,0,0);
        %3 = i16 load(i32 %5, 0);
        %6 = i32 sign_extend(i16 %3);
        regop(reg_0) = i32 %6;
    };
    element_tree = "el:i_itype_loads(el:opc_lh, el:xpr_general, el:simm12, el:x_0)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lh, rd = xpr_general, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_loads__opc_lh__xpr_general__simm12__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lh" reg_0 ", " imm_1 "(" "zero" ")" };
    binary { imm_1[11..0] 0b00000001:bit[8] reg_0[4..0] 0b0000011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lh, el:xpr_general, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lh, rd = xpr_general, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_loads__opc_lh__xpr_general__simm12__xpr_general__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_2 = regop(xpr_general) };
    assembly { "lh" reg_0 ", " imm_1 "(" reg_2 ")" };
    binary { imm_1[11..0] reg_2[4..0] 0b001:bit[3] reg_0[4..0] 0b0000011:bit[7] };
    semantics
    {
        %6 = i32 regop(reg_2);
        %7 = i32 immop(imm_1,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        %3 = i16 load(i32 %5, 0);
        %8 = i32 sign_extend(i16 %3);
        regop(reg_0) = i32 %8;
    };
    element_tree = "el:i_itype_loads(el:opc_lh, el:xpr_general, el:simm12, el:xpr_general)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lhu, rd = x_0, simm = simm12(value), rs1 = x_0)
instruction i_itype_loads__opc_lhu__x_0__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lhu" "x0" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..0] 0b00000101000000000011:bit[20] };
    semantics
    {
        %4 = i32 immop(imm_0,1,12,0,0);
        %2 = i16 load(i32 %4, 0);
    };
    element_tree = "el:i_itype_loads(el:opc_lhu, el:x_0, el:simm12, el:x_0)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lhu, rd = x_0, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_loads__opc_lhu__x_0__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lhu" "x0" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..0] 0b00000101000000000011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lhu, el:x_0, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lhu, rd = x_0, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_loads__opc_lhu__x_0__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "lhu" "x0" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..0] reg_1[4..0] 0b101000000000011:bit[15] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_0,1,12,0,0);
        %4 = i32 add(i32 %5, i32 %6);
        %2 = i16 load(i32 %4, 0);
    };
    element_tree = "el:i_itype_loads(el:opc_lhu, el:x_0, el:simm12, el:xpr_general)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lhu, rd = x_0_alias, simm = simm12(value), rs1 = x_0)
instruction i_itype_loads__opc_lhu__x_0_alias__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lhu" "zero" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..0] 0b00000101000000000011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lhu, el:x_0_alias, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lhu, rd = x_0_alias, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_loads__opc_lhu__x_0_alias__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lhu" "zero" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..0] 0b00000101000000000011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lhu, el:x_0_alias, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lhu, rd = x_0_alias, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_loads__opc_lhu__x_0_alias__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "lhu" "zero" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..0] reg_1[4..0] 0b101000000000011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lhu, el:x_0_alias, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lhu, rd = xpr_general, simm = simm12(value), rs1 = x_0)
instruction i_itype_loads__opc_lhu__xpr_general__simm12__x_0__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lhu" reg_0 ", " imm_1 "(" "x0" ")" };
    binary { imm_1[11..0] 0b00000101:bit[8] reg_0[4..0] 0b0000011:bit[7] };
    semantics
    {
        %5 = i32 immop(imm_1,1,12,0,0);
        %3 = i16 load(i32 %5, 0);
        %6 = i32 zero_extend(i16 %3);
        regop(reg_0) = i32 %6;
    };
    element_tree = "el:i_itype_loads(el:opc_lhu, el:xpr_general, el:simm12, el:x_0)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lhu, rd = xpr_general, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_loads__opc_lhu__xpr_general__simm12__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lhu" reg_0 ", " imm_1 "(" "zero" ")" };
    binary { imm_1[11..0] 0b00000101:bit[8] reg_0[4..0] 0b0000011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lhu, el:xpr_general, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lhu, rd = xpr_general, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_loads__opc_lhu__xpr_general__simm12__xpr_general__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_2 = regop(xpr_general) };
    assembly { "lhu" reg_0 ", " imm_1 "(" reg_2 ")" };
    binary { imm_1[11..0] reg_2[4..0] 0b101:bit[3] reg_0[4..0] 0b0000011:bit[7] };
    semantics
    {
        %6 = i32 regop(reg_2);
        %7 = i32 immop(imm_1,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        %3 = i16 load(i32 %5, 0);
        %8 = i32 zero_extend(i16 %3);
        regop(reg_0) = i32 %8;
    };
    element_tree = "el:i_itype_loads(el:opc_lhu, el:xpr_general, el:simm12, el:xpr_general)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lw, rd = x_0, simm = simm12(value), rs1 = x_0)
instruction i_itype_loads__opc_lw__x_0__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lw" "x0" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..0] 0b00000010000000000011:bit[20] };
    semantics
    {
        %4 = i32 immop(imm_0,1,12,0,0);
        %2 = i32 load(i32 %4, 0);
    };
    element_tree = "el:i_itype_loads(el:opc_lw, el:x_0, el:simm12, el:x_0)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lw, rd = x_0, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_loads__opc_lw__x_0__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lw" "x0" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..0] 0b00000010000000000011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lw, el:x_0, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lw, rd = x_0, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_loads__opc_lw__x_0__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "lw" "x0" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..0] reg_1[4..0] 0b010000000000011:bit[15] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_0,1,12,0,0);
        %4 = i32 add(i32 %5, i32 %6);
        %2 = i32 load(i32 %4, 0);
    };
    element_tree = "el:i_itype_loads(el:opc_lw, el:x_0, el:simm12, el:xpr_general)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lw, rd = x_0_alias, simm = simm12(value), rs1 = x_0)
instruction i_itype_loads__opc_lw__x_0_alias__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lw" "zero" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..0] 0b00000010000000000011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lw, el:x_0_alias, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lw, rd = x_0_alias, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_loads__opc_lw__x_0_alias__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lw" "zero" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..0] 0b00000010000000000011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lw, el:x_0_alias, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lw, rd = x_0_alias, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_loads__opc_lw__x_0_alias__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "lw" "zero" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..0] reg_1[4..0] 0b010000000000011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lw, el:x_0_alias, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lw, rd = xpr_general, simm = simm12(value), rs1 = x_0)
instruction i_itype_loads__opc_lw__xpr_general__simm12__x_0__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lw" reg_0 ", " imm_1 "(" "x0" ")" };
    binary { imm_1[11..0] 0b00000010:bit[8] reg_0[4..0] 0b0000011:bit[7] };
    semantics
    {
        %5 = i32 immop(imm_1,1,12,0,0);
        %3 = i32 load(i32 %5, 0);
        regop(reg_0) = i32 %3;
    };
    element_tree = "el:i_itype_loads(el:opc_lw, el:xpr_general, el:simm12, el:x_0)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lw, rd = xpr_general, simm = simm12(value), rs1 = x_0_alias)
instruction i_itype_loads__opc_lw__xpr_general__simm12__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "lw" reg_0 ", " imm_1 "(" "zero" ")" };
    binary { imm_1[11..0] 0b00000010:bit[8] reg_0[4..0] 0b0000011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_itype_loads(el:opc_lw, el:xpr_general, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_itype_loads(opc = opc_lw, rd = xpr_general, simm = simm12(value), rs1 = xpr_general)
instruction i_itype_loads__opc_lw__xpr_general__simm12__xpr_general__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_2 = regop(xpr_general) };
    assembly { "lw" reg_0 ", " imm_1 "(" reg_2 ")" };
    binary { imm_1[11..0] reg_2[4..0] 0b010:bit[3] reg_0[4..0] 0b0000011:bit[7] };
    semantics
    {
        %6 = i32 regop(reg_2);
        %7 = i32 immop(imm_1,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        %3 = i32 load(i32 %5, 0);
        regop(reg_0) = i32 %3;
    };
    element_tree = "el:i_itype_loads(el:opc_lw, el:xpr_general, el:simm12, el:xpr_general)";
    schedule_class = sc_load;
    slots = {{0}};
};

/// i_j_alias(simm = relative_addr20(addr20))
instruction i_j_alias__relative_addr20__
{
    operands { imm_0 = immop("MI6addr20IH1_13default_start18_15relative_addr204simm1_15relative_addr20") };
    assembly { "j" imm_0 };
    binary { imm_0[19..19] imm_0[9..0] imm_0[10..10] imm_0[18..11] 0b000001101111:bit[12] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_j_alias(el:relative_addr20)";
    slots = {{0}};
};

/// i_jal_abs_calias(opc = opc_jal, rd = x_0, simm = relative_addr20(addr20))
instruction i_jal_abs_calias__opc_jal__x_0__relative_addr20__
{
    operands { imm_0 = immop("MI6addr20IH1_13default_start18_15relative_addr204simm1_15relative_addr20") };
    assembly { "jal" "x0"~"," imm_0 };
    binary { bit[32] };
    semantics
    {
        %4 = i32 immop(imm_0,1,21,1,0);
        %5 = i1 -1;
        jump(i32 %4, i1 %5);
    };
    alias = COMPILER;
    element_tree = "el:i_jal_abs_calias(el:opc_jal, el:x_0, el:relative_addr20)";
    slots = {{0}};
};

/// i_jal_abs_calias(opc = opc_jal, rd = xpr_general, simm = relative_addr20(addr20))
instruction i_jal_abs_calias__opc_jal__xpr_general__relative_addr20__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr20IH1_13default_start18_15relative_addr204simm1_15relative_addr20") };
    assembly { "jal" reg_0~"," imm_1 };
    binary { bit[32] };
    semantics
    {
        %5 = i32 get_pc();
        regop(reg_0) = i32 %5;
        %6 = i32 immop(imm_1,1,21,1,0);
        %7 = i1 -1;
        jump(i32 %6, i1 %7);
    };
    alias = COMPILER;
    element_tree = "el:i_jal_abs_calias(el:opc_jal, el:xpr_general, el:relative_addr20)";
    slots = {{0}};
};

/// i_jr_alias(rs1 = x_0)
instruction i_jr_alias__x_0__
{
    operands {};
    assembly { "jr" "x0" };
    binary { 0b00000000000000000000000001100111:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_jr_alias(el:x_0)";
    slots = {{0}};
};

/// i_jr_alias(rs1 = x_0_alias)
instruction i_jr_alias__x_0_alias__
{
    operands {};
    assembly { "jr" "zero" };
    binary { 0b00000000000000000000000001100111:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_jr_alias(el:x_0_alias)";
    slots = {{0}};
};

/// i_jr_alias(rs1 = xpr_general)
instruction i_jr_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "jr" reg_0 };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b000000001100111:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_jr_alias(el:xpr_general)";
    slots = {{0}};
};

/// i_jtype_jlink(opc = opc_jal, rd = x_0, simm = relative_addr20(addr20))
instruction i_jtype_jlink__opc_jal__x_0__relative_addr20__
{
    operands { imm_0 = immop("MI6addr20IH1_13default_start18_15relative_addr204simm1_15relative_addr20") };
    assembly { "jal" "x0" ", " imm_0 };
    binary { imm_0[19..19] imm_0[9..0] imm_0[10..10] imm_0[18..11] 0b000001101111:bit[12] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_0,1,21,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %9 = i1 -1;
        jump(i32 %4, i1 %9);
    };
    element_tree = "el:i_jtype_jlink(el:opc_jal, el:x_0, el:relative_addr20)";
    slots = {{0}};
};

/// i_jtype_jlink(opc = opc_jal, rd = x_0_alias, simm = relative_addr20(addr20))
instruction i_jtype_jlink__opc_jal__x_0_alias__relative_addr20__
{
    operands { imm_0 = immop("MI6addr20IH1_13default_start18_15relative_addr204simm1_15relative_addr20") };
    assembly { "jal" "zero" ", " imm_0 };
    binary { imm_0[19..19] imm_0[9..0] imm_0[10..10] imm_0[18..11] 0b000001101111:bit[12] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_jtype_jlink(el:opc_jal, el:x_0_alias, el:relative_addr20)";
    slots = {{0}};
};

/// i_jtype_jlink(opc = opc_jal, rd = xpr_general, simm = relative_addr20(addr20))
instruction i_jtype_jlink__opc_jal__xpr_general__relative_addr20__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI6addr20IH1_13default_start18_15relative_addr204simm1_15relative_addr20") };
    assembly { "jal" reg_0 ", " imm_1 };
    binary { imm_1[19..19] imm_1[9..0] imm_1[10..10] imm_1[18..11] reg_0[4..0] 0b1101111:bit[7] };
    semantics
    {
        %5 = i32 get_pc();
        regop(reg_0) = i32 %5;
        %8 = i32 immop(imm_1,1,21,1,0);
        %7 = i32 add(i32 %5, i32 %8);
        %9 = i32 -4;
        %6 = i32 add(i32 %7, i32 %9);
        %10 = i1 -1;
        jump(i32 %6, i1 %10);
    };
    element_tree = "el:i_jtype_jlink(el:opc_jal, el:xpr_general, el:relative_addr20)";
    slots = {{0}};
};

/// i_li_alias(rd = x_0, simm = simm12(value))
instruction i_li_alias__x_0__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "li" "x0"~"," imm_0 };
    binary { imm_0[11..0] 0b00000000000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_li_alias(el:x_0, el:simm12)";
    slots = {{0}};
};

/// i_li_alias(rd = x_0_alias, simm = simm12(value))
instruction i_li_alias__x_0_alias__simm12__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "li" "zero"~"," imm_0 };
    binary { imm_0[11..0] 0b00000000000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_li_alias(el:x_0_alias, el:simm12)";
    slots = {{0}};
};

/// i_li_alias(rd = xpr_general, simm = simm12(value))
instruction i_li_alias__xpr_general__simm12__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "li" reg_0~"," imm_1 };
    binary { imm_1[11..0] 0b00000000:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_li_alias(el:xpr_general, el:simm12)";
    slots = {{0}};
};

/// i_mv_alias(rd = x_0, rs1 = x_0)
instruction i_mv_alias__x_0__x_0__
{
    operands {};
    assembly { "mv" "x0"~"," "x0" };
    binary { 0b00000000000000000000000000010011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_mv_alias(el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_mv_alias(rd = x_0, rs1 = x_0_alias)
instruction i_mv_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "mv" "x0"~"," "zero" };
    binary { 0b00000000000000000000000000010011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_mv_alias(el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_mv_alias(rd = x_0, rs1 = xpr_general)
instruction i_mv_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "mv" "x0"~"," reg_0 };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b000000000010011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_mv_alias(el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_mv_alias(rd = x_0_alias, rs1 = x_0)
instruction i_mv_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "mv" "zero"~"," "x0" };
    binary { 0b00000000000000000000000000010011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_mv_alias(el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_mv_alias(rd = x_0_alias, rs1 = x_0_alias)
instruction i_mv_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "mv" "zero"~"," "zero" };
    binary { 0b00000000000000000000000000010011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_mv_alias(el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_mv_alias(rd = x_0_alias, rs1 = xpr_general)
instruction i_mv_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "mv" "zero"~"," reg_0 };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b000000000010011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_mv_alias(el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_mv_alias(rd = xpr_general, rs1 = x_0)
instruction i_mv_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "mv" reg_0~"," "x0" };
    binary { 0b00000000000000000000:bit[20] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_mv_alias(el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_mv_alias(rd = xpr_general, rs1 = x_0_alias)
instruction i_mv_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "mv" reg_0~"," "zero" };
    binary { 0b00000000000000000000:bit[20] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_mv_alias(el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_mv_alias(rd = xpr_general, rs1 = xpr_general)
instruction i_mv_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "mv" reg_0~"," reg_1 };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b000:bit[3] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_mv_alias(el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_neg_alias(rd = x_0, rs2 = x_0)
instruction i_neg_alias__x_0__x_0__
{
    operands {};
    assembly { "neg" "x0"~"," "x0" };
    binary { 0b01000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_neg_alias(el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_neg_alias(rd = x_0, rs2 = x_0_alias)
instruction i_neg_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "neg" "x0"~"," "zero" };
    binary { 0b01000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_neg_alias(el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_neg_alias(rd = x_0, rs2 = xpr_general)
instruction i_neg_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "neg" "x0"~"," reg_0 };
    binary { 0b0100000:bit[7] reg_0[4..0] 0b00000000000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_neg_alias(el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_neg_alias(rd = x_0_alias, rs2 = x_0)
instruction i_neg_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "neg" "zero"~"," "x0" };
    binary { 0b01000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_neg_alias(el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_neg_alias(rd = x_0_alias, rs2 = x_0_alias)
instruction i_neg_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "neg" "zero"~"," "zero" };
    binary { 0b01000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_neg_alias(el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_neg_alias(rd = x_0_alias, rs2 = xpr_general)
instruction i_neg_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "neg" "zero"~"," reg_0 };
    binary { 0b0100000:bit[7] reg_0[4..0] 0b00000000000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_neg_alias(el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_neg_alias(rd = xpr_general, rs2 = x_0)
instruction i_neg_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "neg" reg_0~"," "x0" };
    binary { 0b01000000000000000000:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_neg_alias(el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_neg_alias(rd = xpr_general, rs2 = x_0_alias)
instruction i_neg_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "neg" reg_0~"," "zero" };
    binary { 0b01000000000000000000:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_neg_alias(el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_neg_alias(rd = xpr_general, rs2 = xpr_general)
instruction i_neg_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "neg" reg_0~"," reg_1 };
    binary { 0b0100000:bit[7] reg_1[4..0] 0b00000000:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_neg_alias(el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_nop_alias
instruction i_nop_alias__
{
    operands {};
    assembly { "nop" };
    binary { 0b00000000000000000000000000010011:bit[32] };
    semantics
    {
        nop();
    };
    alias = ASSEMBLER | COMPILER;
    element_tree = "el:i_nop_alias";
    slots = {{0}};
};

/// i_not_alias(rd = x_0, rs1 = x_0)
instruction i_not_alias__x_0__x_0__
{
    operands {};
    assembly { "not" "x0"~"," "x0" };
    binary { 0b11111111111100000100000000010011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_not_alias(el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_not_alias(rd = x_0, rs1 = x_0_alias)
instruction i_not_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "not" "x0"~"," "zero" };
    binary { 0b11111111111100000100000000010011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_not_alias(el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_not_alias(rd = x_0, rs1 = xpr_general)
instruction i_not_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "not" "x0"~"," reg_0 };
    binary { 0b111111111111:bit[12] reg_0[4..0] 0b100000000010011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_not_alias(el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_not_alias(rd = x_0_alias, rs1 = x_0)
instruction i_not_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "not" "zero"~"," "x0" };
    binary { 0b11111111111100000100000000010011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_not_alias(el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_not_alias(rd = x_0_alias, rs1 = x_0_alias)
instruction i_not_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "not" "zero"~"," "zero" };
    binary { 0b11111111111100000100000000010011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_not_alias(el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_not_alias(rd = x_0_alias, rs1 = xpr_general)
instruction i_not_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "not" "zero"~"," reg_0 };
    binary { 0b111111111111:bit[12] reg_0[4..0] 0b100000000010011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_not_alias(el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_not_alias(rd = xpr_general, rs1 = x_0)
instruction i_not_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "not" reg_0~"," "x0" };
    binary { 0b11111111111100000100:bit[20] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_not_alias(el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_not_alias(rd = xpr_general, rs1 = x_0_alias)
instruction i_not_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "not" reg_0~"," "zero" };
    binary { 0b11111111111100000100:bit[20] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_not_alias(el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_not_alias(rd = xpr_general, rs1 = xpr_general)
instruction i_not_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "not" reg_0~"," reg_1 };
    binary { 0b111111111111:bit[12] reg_1[4..0] 0b100:bit[3] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_not_alias(el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_ret_alias
instruction i_ret_alias__
{
    operands {};
    assembly { "ret" };
    binary { 0b00000000000000001000000001100111:bit[32] };
    semantics
    {
        %5 = i32 1;
        %4 = i32 reg(rf_xpr, 1);
        %6 = i1 -1;
        jump(i32 %4, i1 %6);
    };
    alias = ASSEMBLER | COMPILER;
    element_tree = "el:i_ret_alias";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_add__x_0__x_0__x_0__
{
    operands {};
    assembly { "add" "x0" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000000000000110011:bit[32] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_add__x_0__x_0__x_0_alias__
{
    operands {};
    assembly { "add" "x0" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_add__x_0__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "add" "x0" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000000000000110011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_add__x_0__x_0_alias__x_0__
{
    operands {};
    assembly { "add" "x0" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_add__x_0__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "add" "x0" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_add__x_0__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "add" "x0" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000000000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_add__x_0__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "add" "x0" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b000000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_add__x_0__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "add" "x0" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b000000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_add__x_0__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "add" "x0" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b000000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0_alias, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_add__x_0_alias__x_0__x_0__
{
    operands {};
    assembly { "add" "zero" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0_alias, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0_alias, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_add__x_0_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "add" "zero" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0_alias, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0_alias, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_add__x_0_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "add" "zero" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000000000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0_alias, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_add__x_0_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "add" "zero" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0_alias, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_add__x_0_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "add" "zero" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0_alias, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0_alias, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_add__x_0_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "add" "zero" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000000000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0_alias, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_add__x_0_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "add" "zero" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b000000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0_alias, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_add__x_0_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "add" "zero" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b000000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0_alias, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = x_0_alias, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_add__x_0_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "add" "zero" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b000000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:x_0_alias, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = xpr_general, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_add__xpr_general__x_0__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "add" reg_0 ", " "x0" ", " "x0" };
    binary { 0b00000000000000000000:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_add, el:xpr_general, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = xpr_general, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_add__xpr_general__x_0__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "add" reg_0 ", " "x0" ", " "zero" };
    binary { 0b00000000000000000000:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:xpr_general, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = xpr_general, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_add__xpr_general__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "add" reg_0 ", " "x0" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000000:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_add, el:xpr_general, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_add__xpr_general__x_0_alias__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "add" reg_0 ", " "zero" ", " "x0" };
    binary { 0b00000000000000000000:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:xpr_general, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_add__xpr_general__x_0_alias__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "add" reg_0 ", " "zero" ", " "zero" };
    binary { 0b00000000000000000000:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:xpr_general, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = xpr_general, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_add__xpr_general__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "add" reg_0 ", " "zero" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000000:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:xpr_general, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = xpr_general, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_add__xpr_general__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "add" reg_0 ", " reg_1 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b000:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_add, el:xpr_general, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = xpr_general, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_add__xpr_general__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "add" reg_0 ", " reg_1 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b000:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_add, el:xpr_general, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_add, rd = xpr_general, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_add__xpr_general__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), reg_2 = regop(xpr_general) };
    assembly { "add" reg_0 ", " reg_1 ", " reg_2 };
    binary { 0b0000000:bit[7] reg_2[4..0] reg_1[4..0] 0b000:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_2);
        %6 = i32 regop(reg_1);
        %4 = i32 add(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_add, el:xpr_general, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_and__x_0__x_0__x_0__
{
    operands {};
    assembly { "and" "x0" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000111000000110011:bit[32] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_and__x_0__x_0__x_0_alias__
{
    operands {};
    assembly { "and" "x0" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000111000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_and__x_0__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "and" "x0" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000111000000110011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_and__x_0__x_0_alias__x_0__
{
    operands {};
    assembly { "and" "x0" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000111000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_and__x_0__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "and" "x0" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000111000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_and__x_0__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "and" "x0" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000111000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_and__x_0__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "and" "x0" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b111000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_and__x_0__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "and" "x0" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b111000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_and__x_0__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "and" "x0" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b111000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0_alias, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_and__x_0_alias__x_0__x_0__
{
    operands {};
    assembly { "and" "zero" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000111000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0_alias, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0_alias, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_and__x_0_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "and" "zero" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000111000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0_alias, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0_alias, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_and__x_0_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "and" "zero" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000111000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0_alias, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_and__x_0_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "and" "zero" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000111000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0_alias, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_and__x_0_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "and" "zero" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000111000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0_alias, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0_alias, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_and__x_0_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "and" "zero" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000111000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0_alias, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_and__x_0_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "and" "zero" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b111000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0_alias, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_and__x_0_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "and" "zero" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b111000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0_alias, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = x_0_alias, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_and__x_0_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "and" "zero" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b111000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:x_0_alias, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = xpr_general, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_and__xpr_general__x_0__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "and" reg_0 ", " "x0" ", " "x0" };
    binary { 0b00000000000000000111:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_and, el:xpr_general, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = xpr_general, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_and__xpr_general__x_0__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "and" reg_0 ", " "x0" ", " "zero" };
    binary { 0b00000000000000000111:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:xpr_general, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = xpr_general, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_and__xpr_general__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "and" reg_0 ", " "x0" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000111:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_and, el:xpr_general, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_and__xpr_general__x_0_alias__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "and" reg_0 ", " "zero" ", " "x0" };
    binary { 0b00000000000000000111:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:xpr_general, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_and__xpr_general__x_0_alias__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "and" reg_0 ", " "zero" ", " "zero" };
    binary { 0b00000000000000000111:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:xpr_general, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = xpr_general, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_and__xpr_general__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "and" reg_0 ", " "zero" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000111:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:xpr_general, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = xpr_general, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_and__xpr_general__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "and" reg_0 ", " reg_1 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b111:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_and, el:xpr_general, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = xpr_general, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_and__xpr_general__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "and" reg_0 ", " reg_1 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b111:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_and, el:xpr_general, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_and, rd = xpr_general, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_and__xpr_general__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), reg_2 = regop(xpr_general) };
    assembly { "and" reg_0 ", " reg_1 ", " reg_2 };
    binary { 0b0000000:bit[7] reg_2[4..0] reg_1[4..0] 0b111:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_2);
        %6 = i32 regop(reg_1);
        %4 = i32 and(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_and, el:xpr_general, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_or__x_0__x_0__x_0__
{
    operands {};
    assembly { "or" "x0" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000110000000110011:bit[32] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_or__x_0__x_0__x_0_alias__
{
    operands {};
    assembly { "or" "x0" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000110000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_or__x_0__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "or" "x0" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000110000000110011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_or__x_0__x_0_alias__x_0__
{
    operands {};
    assembly { "or" "x0" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000110000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_or__x_0__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "or" "x0" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000110000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_or__x_0__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "or" "x0" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000110000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_or__x_0__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "or" "x0" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b110000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_or__x_0__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "or" "x0" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b110000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_or__x_0__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "or" "x0" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b110000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0_alias, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_or__x_0_alias__x_0__x_0__
{
    operands {};
    assembly { "or" "zero" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000110000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0_alias, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0_alias, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_or__x_0_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "or" "zero" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000110000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0_alias, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0_alias, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_or__x_0_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "or" "zero" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000110000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0_alias, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_or__x_0_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "or" "zero" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000110000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0_alias, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_or__x_0_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "or" "zero" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000110000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0_alias, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0_alias, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_or__x_0_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "or" "zero" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000110000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0_alias, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_or__x_0_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "or" "zero" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b110000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0_alias, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_or__x_0_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "or" "zero" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b110000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0_alias, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = x_0_alias, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_or__x_0_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "or" "zero" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b110000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:x_0_alias, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = xpr_general, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_or__xpr_general__x_0__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "or" reg_0 ", " "x0" ", " "x0" };
    binary { 0b00000000000000000110:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_or, el:xpr_general, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = xpr_general, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_or__xpr_general__x_0__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "or" reg_0 ", " "x0" ", " "zero" };
    binary { 0b00000000000000000110:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:xpr_general, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = xpr_general, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_or__xpr_general__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "or" reg_0 ", " "x0" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000110:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_or, el:xpr_general, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_or__xpr_general__x_0_alias__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "or" reg_0 ", " "zero" ", " "x0" };
    binary { 0b00000000000000000110:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:xpr_general, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_or__xpr_general__x_0_alias__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "or" reg_0 ", " "zero" ", " "zero" };
    binary { 0b00000000000000000110:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:xpr_general, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = xpr_general, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_or__xpr_general__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "or" reg_0 ", " "zero" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000110:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:xpr_general, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = xpr_general, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_or__xpr_general__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "or" reg_0 ", " reg_1 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b110:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_or, el:xpr_general, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = xpr_general, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_or__xpr_general__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "or" reg_0 ", " reg_1 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b110:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_or, el:xpr_general, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_or, rd = xpr_general, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_or__xpr_general__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), reg_2 = regop(xpr_general) };
    assembly { "or" reg_0 ", " reg_1 ", " reg_2 };
    binary { 0b0000000:bit[7] reg_2[4..0] reg_1[4..0] 0b110:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_2);
        %6 = i32 regop(reg_1);
        %4 = i32 or(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_or, el:xpr_general, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_sll__x_0__x_0__x_0__
{
    operands {};
    assembly { "sll" "x0" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000001000000110011:bit[32] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sll__x_0__x_0__x_0_alias__
{
    operands {};
    assembly { "sll" "x0" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000001000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_sll__x_0__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sll" "x0" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000001000000110011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_sll__x_0__x_0_alias__x_0__
{
    operands {};
    assembly { "sll" "x0" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000001000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sll__x_0__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "sll" "x0" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000001000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_sll__x_0__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sll" "x0" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000001000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_sll__x_0__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sll" "x0" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b001000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sll__x_0__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sll" "x0" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b001000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_sll__x_0__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sll" "x0" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b001000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0_alias, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_sll__x_0_alias__x_0__x_0__
{
    operands {};
    assembly { "sll" "zero" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000001000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0_alias, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0_alias, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sll__x_0_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "sll" "zero" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000001000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0_alias, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0_alias, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_sll__x_0_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sll" "zero" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000001000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0_alias, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_sll__x_0_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "sll" "zero" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000001000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0_alias, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sll__x_0_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "sll" "zero" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000001000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0_alias, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0_alias, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_sll__x_0_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sll" "zero" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000001000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0_alias, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_sll__x_0_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sll" "zero" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b001000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0_alias, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sll__x_0_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sll" "zero" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b001000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0_alias, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = x_0_alias, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_sll__x_0_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sll" "zero" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b001000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:x_0_alias, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = xpr_general, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_sll__xpr_general__x_0__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sll" reg_0 ", " "x0" ", " "x0" };
    binary { 0b00000000000000000001:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sll, el:xpr_general, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = xpr_general, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sll__xpr_general__x_0__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sll" reg_0 ", " "x0" ", " "zero" };
    binary { 0b00000000000000000001:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:xpr_general, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = xpr_general, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_sll__xpr_general__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sll" reg_0 ", " "x0" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000001:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sll, el:xpr_general, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_sll__xpr_general__x_0_alias__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sll" reg_0 ", " "zero" ", " "x0" };
    binary { 0b00000000000000000001:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:xpr_general, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sll__xpr_general__x_0_alias__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sll" reg_0 ", " "zero" ", " "zero" };
    binary { 0b00000000000000000001:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:xpr_general, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = xpr_general, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_sll__xpr_general__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sll" reg_0 ", " "zero" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000001:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:xpr_general, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = xpr_general, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_sll__xpr_general__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sll" reg_0 ", " reg_1 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b001:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sll, el:xpr_general, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = xpr_general, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sll__xpr_general__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sll" reg_0 ", " reg_1 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b001:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sll, el:xpr_general, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sll, rd = xpr_general, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_sll__xpr_general__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), reg_2 = regop(xpr_general) };
    assembly { "sll" reg_0 ", " reg_1 ", " reg_2 };
    binary { 0b0000000:bit[7] reg_2[4..0] reg_1[4..0] 0b001:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %6 = i32 regop(reg_2);
        %4 = i32 shl(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sll, el:xpr_general, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_slt__x_0__x_0__x_0__
{
    operands {};
    assembly { "slt" "x0" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_slt__x_0__x_0__x_0_alias__
{
    operands {};
    assembly { "slt" "x0" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_slt__x_0__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "slt" "x0" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000010000000110011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_slt__x_0__x_0_alias__x_0__
{
    operands {};
    assembly { "slt" "x0" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_slt__x_0__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "slt" "x0" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_slt__x_0__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "slt" "x0" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000010000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_slt__x_0__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "slt" "x0" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b010000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_slt__x_0__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "slt" "x0" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b010000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_slt__x_0__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "slt" "x0" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b010000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0_alias, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_slt__x_0_alias__x_0__x_0__
{
    operands {};
    assembly { "slt" "zero" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0_alias, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0_alias, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_slt__x_0_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "slt" "zero" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0_alias, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0_alias, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_slt__x_0_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "slt" "zero" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000010000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0_alias, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_slt__x_0_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "slt" "zero" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0_alias, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_slt__x_0_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "slt" "zero" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0_alias, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0_alias, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_slt__x_0_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "slt" "zero" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000010000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0_alias, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_slt__x_0_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "slt" "zero" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b010000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0_alias, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_slt__x_0_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "slt" "zero" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b010000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0_alias, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = x_0_alias, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_slt__x_0_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "slt" "zero" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b010000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:x_0_alias, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = xpr_general, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_slt__xpr_general__x_0__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "slt" reg_0 ", " "x0" ", " "x0" };
    binary { 0b00000000000000000010:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_slt, el:xpr_general, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = xpr_general, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_slt__xpr_general__x_0__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "slt" reg_0 ", " "x0" ", " "zero" };
    binary { 0b00000000000000000010:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:xpr_general, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = xpr_general, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_slt__xpr_general__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "slt" reg_0 ", " "x0" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000010:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %6 = i32 regop(reg_1);
        %7 = i32 0;
        %5 = i1 setgt(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_slt, el:xpr_general, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_slt__xpr_general__x_0_alias__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "slt" reg_0 ", " "zero" ", " "x0" };
    binary { 0b00000000000000000010:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:xpr_general, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_slt__xpr_general__x_0_alias__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "slt" reg_0 ", " "zero" ", " "zero" };
    binary { 0b00000000000000000010:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:xpr_general, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = xpr_general, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_slt__xpr_general__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "slt" reg_0 ", " "zero" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000010:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:xpr_general, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = xpr_general, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_slt__xpr_general__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "slt" reg_0 ", " reg_1 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b010:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %6 = i32 31;
        %4 = i32 srl(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_slt, el:xpr_general, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = xpr_general, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_slt__xpr_general__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "slt" reg_0 ", " reg_1 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b010:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_slt, el:xpr_general, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_slt, rd = xpr_general, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_slt__xpr_general__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), reg_2 = regop(xpr_general) };
    assembly { "slt" reg_0 ", " reg_1 ", " reg_2 };
    binary { 0b0000000:bit[7] reg_2[4..0] reg_1[4..0] 0b010:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %6 = i32 regop(reg_1);
        %7 = i32 regop(reg_2);
        %5 = i1 setlt(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_slt, el:xpr_general, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_sltu__x_0__x_0__x_0__
{
    operands {};
    assembly { "sltu" "x0" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000011000000110011:bit[32] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sltu__x_0__x_0__x_0_alias__
{
    operands {};
    assembly { "sltu" "x0" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000011000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_sltu__x_0__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltu" "x0" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000011000000110011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_sltu__x_0__x_0_alias__x_0__
{
    operands {};
    assembly { "sltu" "x0" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000011000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sltu__x_0__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "sltu" "x0" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000011000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_sltu__x_0__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltu" "x0" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000011000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_sltu__x_0__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltu" "x0" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b011000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sltu__x_0__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltu" "x0" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b011000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_sltu__x_0__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sltu" "x0" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b011000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0_alias, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_sltu__x_0_alias__x_0__x_0__
{
    operands {};
    assembly { "sltu" "zero" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000011000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0_alias, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0_alias, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sltu__x_0_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "sltu" "zero" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000011000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0_alias, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0_alias, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_sltu__x_0_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltu" "zero" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000011000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0_alias, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_sltu__x_0_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "sltu" "zero" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000011000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0_alias, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sltu__x_0_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "sltu" "zero" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000011000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0_alias, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0_alias, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_sltu__x_0_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltu" "zero" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000011000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0_alias, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_sltu__x_0_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltu" "zero" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b011000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0_alias, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sltu__x_0_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltu" "zero" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b011000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0_alias, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = x_0_alias, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_sltu__x_0_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sltu" "zero" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b011000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:x_0_alias, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = xpr_general, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_sltu__xpr_general__x_0__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltu" reg_0 ", " "x0" ", " "x0" };
    binary { 0b00000000000000000011:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:xpr_general, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = xpr_general, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sltu__xpr_general__x_0__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltu" reg_0 ", " "x0" ", " "zero" };
    binary { 0b00000000000000000011:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:xpr_general, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = xpr_general, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_sltu__xpr_general__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sltu" reg_0 ", " "x0" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000011:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %6 = i32 regop(reg_1);
        %7 = i32 0;
        %5 = i1 setne(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:xpr_general, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_sltu__xpr_general__x_0_alias__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltu" reg_0 ", " "zero" ", " "x0" };
    binary { 0b00000000000000000011:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:xpr_general, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sltu__xpr_general__x_0_alias__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltu" reg_0 ", " "zero" ", " "zero" };
    binary { 0b00000000000000000011:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:xpr_general, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = xpr_general, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_sltu__xpr_general__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sltu" reg_0 ", " "zero" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000011:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:xpr_general, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = xpr_general, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_sltu__xpr_general__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sltu" reg_0 ", " reg_1 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b011:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:xpr_general, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = xpr_general, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sltu__xpr_general__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sltu" reg_0 ", " reg_1 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b011:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:xpr_general, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sltu, rd = xpr_general, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_sltu__xpr_general__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), reg_2 = regop(xpr_general) };
    assembly { "sltu" reg_0 ", " reg_1 ", " reg_2 };
    binary { 0b0000000:bit[7] reg_2[4..0] reg_1[4..0] 0b011:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %6 = i32 regop(reg_1);
        %7 = i32 regop(reg_2);
        %5 = i1 setult(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sltu, el:xpr_general, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_sra__x_0__x_0__x_0__
{
    operands {};
    assembly { "sra" "x0" ", " "x0" ", " "x0" };
    binary { 0b01000000000000000101000000110011:bit[32] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sra__x_0__x_0__x_0_alias__
{
    operands {};
    assembly { "sra" "x0" ", " "x0" ", " "zero" };
    binary { 0b01000000000000000101000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_sra__x_0__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sra" "x0" ", " "x0" ", " reg_0 };
    binary { 0b0100000:bit[7] reg_0[4..0] 0b00000101000000110011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_sra__x_0__x_0_alias__x_0__
{
    operands {};
    assembly { "sra" "x0" ", " "zero" ", " "x0" };
    binary { 0b01000000000000000101000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sra__x_0__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "sra" "x0" ", " "zero" ", " "zero" };
    binary { 0b01000000000000000101000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_sra__x_0__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sra" "x0" ", " "zero" ", " reg_0 };
    binary { 0b0100000:bit[7] reg_0[4..0] 0b00000101000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_sra__x_0__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sra" "x0" ", " reg_0 ", " "x0" };
    binary { 0b010000000000:bit[12] reg_0[4..0] 0b101000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sra__x_0__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sra" "x0" ", " reg_0 ", " "zero" };
    binary { 0b010000000000:bit[12] reg_0[4..0] 0b101000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_sra__x_0__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sra" "x0" ", " reg_0 ", " reg_1 };
    binary { 0b0100000:bit[7] reg_1[4..0] reg_0[4..0] 0b101000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0_alias, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_sra__x_0_alias__x_0__x_0__
{
    operands {};
    assembly { "sra" "zero" ", " "x0" ", " "x0" };
    binary { 0b01000000000000000101000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0_alias, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0_alias, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sra__x_0_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "sra" "zero" ", " "x0" ", " "zero" };
    binary { 0b01000000000000000101000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0_alias, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0_alias, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_sra__x_0_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sra" "zero" ", " "x0" ", " reg_0 };
    binary { 0b0100000:bit[7] reg_0[4..0] 0b00000101000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0_alias, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_sra__x_0_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "sra" "zero" ", " "zero" ", " "x0" };
    binary { 0b01000000000000000101000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0_alias, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sra__x_0_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "sra" "zero" ", " "zero" ", " "zero" };
    binary { 0b01000000000000000101000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0_alias, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0_alias, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_sra__x_0_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sra" "zero" ", " "zero" ", " reg_0 };
    binary { 0b0100000:bit[7] reg_0[4..0] 0b00000101000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0_alias, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_sra__x_0_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sra" "zero" ", " reg_0 ", " "x0" };
    binary { 0b010000000000:bit[12] reg_0[4..0] 0b101000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0_alias, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sra__x_0_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sra" "zero" ", " reg_0 ", " "zero" };
    binary { 0b010000000000:bit[12] reg_0[4..0] 0b101000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0_alias, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = x_0_alias, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_sra__x_0_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sra" "zero" ", " reg_0 ", " reg_1 };
    binary { 0b0100000:bit[7] reg_1[4..0] reg_0[4..0] 0b101000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:x_0_alias, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = xpr_general, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_sra__xpr_general__x_0__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sra" reg_0 ", " "x0" ", " "x0" };
    binary { 0b01000000000000000101:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sra, el:xpr_general, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = xpr_general, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sra__xpr_general__x_0__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sra" reg_0 ", " "x0" ", " "zero" };
    binary { 0b01000000000000000101:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:xpr_general, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = xpr_general, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_sra__xpr_general__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sra" reg_0 ", " "x0" ", " reg_1 };
    binary { 0b0100000:bit[7] reg_1[4..0] 0b00000101:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sra, el:xpr_general, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_sra__xpr_general__x_0_alias__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sra" reg_0 ", " "zero" ", " "x0" };
    binary { 0b01000000000000000101:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:xpr_general, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sra__xpr_general__x_0_alias__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sra" reg_0 ", " "zero" ", " "zero" };
    binary { 0b01000000000000000101:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:xpr_general, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = xpr_general, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_sra__xpr_general__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sra" reg_0 ", " "zero" ", " reg_1 };
    binary { 0b0100000:bit[7] reg_1[4..0] 0b00000101:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:xpr_general, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = xpr_general, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_sra__xpr_general__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sra" reg_0 ", " reg_1 ", " "x0" };
    binary { 0b010000000000:bit[12] reg_1[4..0] 0b101:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sra, el:xpr_general, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = xpr_general, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sra__xpr_general__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sra" reg_0 ", " reg_1 ", " "zero" };
    binary { 0b010000000000:bit[12] reg_1[4..0] 0b101:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sra, el:xpr_general, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sra, rd = xpr_general, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_sra__xpr_general__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), reg_2 = regop(xpr_general) };
    assembly { "sra" reg_0 ", " reg_1 ", " reg_2 };
    binary { 0b0100000:bit[7] reg_2[4..0] reg_1[4..0] 0b101:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %7 = i32 regop(reg_2);
        %8 = i32 31;
        %6 = i32 and(i32 %7, i32 %8);
        %4 = i32 sra(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sra, el:xpr_general, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_srl__x_0__x_0__x_0__
{
    operands {};
    assembly { "srl" "x0" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000101000000110011:bit[32] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_srl__x_0__x_0__x_0_alias__
{
    operands {};
    assembly { "srl" "x0" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000101000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_srl__x_0__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "srl" "x0" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000101000000110011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_srl__x_0__x_0_alias__x_0__
{
    operands {};
    assembly { "srl" "x0" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000101000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_srl__x_0__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "srl" "x0" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000101000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_srl__x_0__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "srl" "x0" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000101000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_srl__x_0__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "srl" "x0" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b101000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_srl__x_0__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "srl" "x0" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b101000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_srl__x_0__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "srl" "x0" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b101000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0_alias, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_srl__x_0_alias__x_0__x_0__
{
    operands {};
    assembly { "srl" "zero" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000101000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0_alias, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0_alias, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_srl__x_0_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "srl" "zero" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000101000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0_alias, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0_alias, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_srl__x_0_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "srl" "zero" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000101000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0_alias, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_srl__x_0_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "srl" "zero" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000101000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0_alias, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_srl__x_0_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "srl" "zero" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000101000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0_alias, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0_alias, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_srl__x_0_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "srl" "zero" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000101000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0_alias, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_srl__x_0_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "srl" "zero" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b101000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0_alias, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_srl__x_0_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "srl" "zero" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b101000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0_alias, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = x_0_alias, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_srl__x_0_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "srl" "zero" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b101000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:x_0_alias, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = xpr_general, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_srl__xpr_general__x_0__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "srl" reg_0 ", " "x0" ", " "x0" };
    binary { 0b00000000000000000101:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_srl, el:xpr_general, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = xpr_general, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_srl__xpr_general__x_0__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "srl" reg_0 ", " "x0" ", " "zero" };
    binary { 0b00000000000000000101:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:xpr_general, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = xpr_general, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_srl__xpr_general__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "srl" reg_0 ", " "x0" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000101:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_srl, el:xpr_general, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_srl__xpr_general__x_0_alias__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "srl" reg_0 ", " "zero" ", " "x0" };
    binary { 0b00000000000000000101:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:xpr_general, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_srl__xpr_general__x_0_alias__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "srl" reg_0 ", " "zero" ", " "zero" };
    binary { 0b00000000000000000101:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:xpr_general, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = xpr_general, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_srl__xpr_general__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "srl" reg_0 ", " "zero" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000101:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:xpr_general, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = xpr_general, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_srl__xpr_general__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "srl" reg_0 ", " reg_1 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b101:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_srl, el:xpr_general, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = xpr_general, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_srl__xpr_general__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "srl" reg_0 ", " reg_1 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b101:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_srl, el:xpr_general, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_srl, rd = xpr_general, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_srl__xpr_general__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), reg_2 = regop(xpr_general) };
    assembly { "srl" reg_0 ", " reg_1 ", " reg_2 };
    binary { 0b0000000:bit[7] reg_2[4..0] reg_1[4..0] 0b101:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %7 = i32 regop(reg_2);
        %8 = i32 31;
        %6 = i32 and(i32 %7, i32 %8);
        %4 = i32 srl(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_srl, el:xpr_general, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_sub__x_0__x_0__x_0__
{
    operands {};
    assembly { "sub" "x0" ", " "x0" ", " "x0" };
    binary { 0b01000000000000000000000000110011:bit[32] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sub__x_0__x_0__x_0_alias__
{
    operands {};
    assembly { "sub" "x0" ", " "x0" ", " "zero" };
    binary { 0b01000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_sub__x_0__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sub" "x0" ", " "x0" ", " reg_0 };
    binary { 0b0100000:bit[7] reg_0[4..0] 0b00000000000000110011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_sub__x_0__x_0_alias__x_0__
{
    operands {};
    assembly { "sub" "x0" ", " "zero" ", " "x0" };
    binary { 0b01000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sub__x_0__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "sub" "x0" ", " "zero" ", " "zero" };
    binary { 0b01000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_sub__x_0__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sub" "x0" ", " "zero" ", " reg_0 };
    binary { 0b0100000:bit[7] reg_0[4..0] 0b00000000000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_sub__x_0__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sub" "x0" ", " reg_0 ", " "x0" };
    binary { 0b010000000000:bit[12] reg_0[4..0] 0b000000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sub__x_0__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sub" "x0" ", " reg_0 ", " "zero" };
    binary { 0b010000000000:bit[12] reg_0[4..0] 0b000000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_sub__x_0__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sub" "x0" ", " reg_0 ", " reg_1 };
    binary { 0b0100000:bit[7] reg_1[4..0] reg_0[4..0] 0b000000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0_alias, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_sub__x_0_alias__x_0__x_0__
{
    operands {};
    assembly { "sub" "zero" ", " "x0" ", " "x0" };
    binary { 0b01000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0_alias, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0_alias, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sub__x_0_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "sub" "zero" ", " "x0" ", " "zero" };
    binary { 0b01000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0_alias, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0_alias, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_sub__x_0_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sub" "zero" ", " "x0" ", " reg_0 };
    binary { 0b0100000:bit[7] reg_0[4..0] 0b00000000000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0_alias, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_sub__x_0_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "sub" "zero" ", " "zero" ", " "x0" };
    binary { 0b01000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0_alias, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sub__x_0_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "sub" "zero" ", " "zero" ", " "zero" };
    binary { 0b01000000000000000000000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0_alias, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0_alias, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_sub__x_0_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sub" "zero" ", " "zero" ", " reg_0 };
    binary { 0b0100000:bit[7] reg_0[4..0] 0b00000000000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0_alias, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_sub__x_0_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sub" "zero" ", " reg_0 ", " "x0" };
    binary { 0b010000000000:bit[12] reg_0[4..0] 0b000000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0_alias, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sub__x_0_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sub" "zero" ", " reg_0 ", " "zero" };
    binary { 0b010000000000:bit[12] reg_0[4..0] 0b000000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0_alias, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = x_0_alias, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_sub__x_0_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sub" "zero" ", " reg_0 ", " reg_1 };
    binary { 0b0100000:bit[7] reg_1[4..0] reg_0[4..0] 0b000000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:x_0_alias, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = xpr_general, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_sub__xpr_general__x_0__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sub" reg_0 ", " "x0" ", " "x0" };
    binary { 0b01000000000000000000:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sub, el:xpr_general, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = xpr_general, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sub__xpr_general__x_0__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sub" reg_0 ", " "x0" ", " "zero" };
    binary { 0b01000000000000000000:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:xpr_general, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = xpr_general, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_sub__xpr_general__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sub" reg_0 ", " "x0" ", " reg_1 };
    binary { 0b0100000:bit[7] reg_1[4..0] 0b00000000:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %5 = i32 0;
        %6 = i32 regop(reg_1);
        %4 = i32 sub(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sub, el:xpr_general, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_sub__xpr_general__x_0_alias__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sub" reg_0 ", " "zero" ", " "x0" };
    binary { 0b01000000000000000000:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:xpr_general, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sub__xpr_general__x_0_alias__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sub" reg_0 ", " "zero" ", " "zero" };
    binary { 0b01000000000000000000:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:xpr_general, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = xpr_general, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_sub__xpr_general__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sub" reg_0 ", " "zero" ", " reg_1 };
    binary { 0b0100000:bit[7] reg_1[4..0] 0b00000000:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:xpr_general, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = xpr_general, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_sub__xpr_general__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sub" reg_0 ", " reg_1 ", " "x0" };
    binary { 0b010000000000:bit[12] reg_1[4..0] 0b000:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sub, el:xpr_general, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = xpr_general, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_sub__xpr_general__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sub" reg_0 ", " reg_1 ", " "zero" };
    binary { 0b010000000000:bit[12] reg_1[4..0] 0b000:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_sub, el:xpr_general, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_sub, rd = xpr_general, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_sub__xpr_general__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), reg_2 = regop(xpr_general) };
    assembly { "sub" reg_0 ", " reg_1 ", " reg_2 };
    binary { 0b0100000:bit[7] reg_2[4..0] reg_1[4..0] 0b000:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %6 = i32 regop(reg_2);
        %4 = i32 sub(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_sub, el:xpr_general, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_xor__x_0__x_0__x_0__
{
    operands {};
    assembly { "xor" "x0" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000100000000110011:bit[32] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_xor__x_0__x_0__x_0_alias__
{
    operands {};
    assembly { "xor" "x0" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000100000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_xor__x_0__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "xor" "x0" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000100000000110011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_xor__x_0__x_0_alias__x_0__
{
    operands {};
    assembly { "xor" "x0" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000100000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_xor__x_0__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "xor" "x0" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000100000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_xor__x_0__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "xor" "x0" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000100000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_xor__x_0__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "xor" "x0" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b100000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_xor__x_0__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "xor" "x0" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b100000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_xor__x_0__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "xor" "x0" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b100000000110011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0_alias, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_xor__x_0_alias__x_0__x_0__
{
    operands {};
    assembly { "xor" "zero" ", " "x0" ", " "x0" };
    binary { 0b00000000000000000100000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0_alias, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0_alias, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_xor__x_0_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "xor" "zero" ", " "x0" ", " "zero" };
    binary { 0b00000000000000000100000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0_alias, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0_alias, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_xor__x_0_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "xor" "zero" ", " "x0" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000100000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0_alias, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_xor__x_0_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "xor" "zero" ", " "zero" ", " "x0" };
    binary { 0b00000000000000000100000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0_alias, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0_alias, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_xor__x_0_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "xor" "zero" ", " "zero" ", " "zero" };
    binary { 0b00000000000000000100000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0_alias, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0_alias, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_xor__x_0_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "xor" "zero" ", " "zero" ", " reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000100000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0_alias, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_xor__x_0_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "xor" "zero" ", " reg_0 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b100000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0_alias, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0_alias, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_xor__x_0_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "xor" "zero" ", " reg_0 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b100000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0_alias, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = x_0_alias, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_xor__x_0_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "xor" "zero" ", " reg_0 ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_0[4..0] 0b100000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:x_0_alias, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = xpr_general, rs1 = x_0, rs2 = x_0)
instruction i_rtype_alu__opc_xor__xpr_general__x_0__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "xor" reg_0 ", " "x0" ", " "x0" };
    binary { 0b00000000000000000100:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_xor, el:xpr_general, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = xpr_general, rs1 = x_0, rs2 = x_0_alias)
instruction i_rtype_alu__opc_xor__xpr_general__x_0__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "xor" reg_0 ", " "x0" ", " "zero" };
    binary { 0b00000000000000000100:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:xpr_general, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = xpr_general, rs1 = x_0, rs2 = xpr_general)
instruction i_rtype_alu__opc_xor__xpr_general__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "xor" reg_0 ", " "x0" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000100:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_xor, el:xpr_general, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0)
instruction i_rtype_alu__opc_xor__xpr_general__x_0_alias__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "xor" reg_0 ", " "zero" ", " "x0" };
    binary { 0b00000000000000000100:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:xpr_general, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = xpr_general, rs1 = x_0_alias, rs2 = x_0_alias)
instruction i_rtype_alu__opc_xor__xpr_general__x_0_alias__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "xor" reg_0 ", " "zero" ", " "zero" };
    binary { 0b00000000000000000100:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:xpr_general, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = xpr_general, rs1 = x_0_alias, rs2 = xpr_general)
instruction i_rtype_alu__opc_xor__xpr_general__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "xor" reg_0 ", " "zero" ", " reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000100:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:xpr_general, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = xpr_general, rs1 = xpr_general, rs2 = x_0)
instruction i_rtype_alu__opc_xor__xpr_general__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "xor" reg_0 ", " reg_1 ", " "x0" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b100:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %4 = i32 regop(reg_1);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_xor, el:xpr_general, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = xpr_general, rs1 = xpr_general, rs2 = x_0_alias)
instruction i_rtype_alu__opc_xor__xpr_general__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "xor" reg_0 ", " reg_1 ", " "zero" };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b100:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_alu(el:opc_xor, el:xpr_general, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_rtype_alu(opc = opc_xor, rd = xpr_general, rs1 = xpr_general, rs2 = xpr_general)
instruction i_rtype_alu__opc_xor__xpr_general__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), reg_2 = regop(xpr_general) };
    assembly { "xor" reg_0 ", " reg_1 ", " reg_2 };
    binary { 0b0000000:bit[7] reg_2[4..0] reg_1[4..0] 0b100:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_2);
        %6 = i32 regop(reg_1);
        %4 = i32 xor(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_alu(el:opc_xor, el:xpr_general, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_slli, rd = x_0, rs1 = x_0, imm = uimm5(value))
instruction i_rtype_shift__opc_slli__x_0__x_0__uimm5__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "slli" "x0" ", " "x0" ", " imm_0 };
    binary { 0b0000000:bit[7] imm_0[4..0] 0b00000001000000010011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_rtype_shift(el:opc_slli, el:x_0, el:x_0, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_slli, rd = x_0, rs1 = x_0_alias, imm = uimm5(value))
instruction i_rtype_shift__opc_slli__x_0__x_0_alias__uimm5__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "slli" "x0" ", " "zero" ", " imm_0 };
    binary { 0b0000000:bit[7] imm_0[4..0] 0b00000001000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_shift(el:opc_slli, el:x_0, el:x_0_alias, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_slli, rd = x_0, rs1 = xpr_general, imm = uimm5(value))
instruction i_rtype_shift__opc_slli__x_0__xpr_general__uimm5__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "slli" "x0" ", " reg_0 ", " imm_1 };
    binary { 0b0000000:bit[7] imm_1[4..0] reg_0[4..0] 0b001000000010011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_shift(el:opc_slli, el:x_0, el:xpr_general, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_slli, rd = x_0_alias, rs1 = x_0, imm = uimm5(value))
instruction i_rtype_shift__opc_slli__x_0_alias__x_0__uimm5__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "slli" "zero" ", " "x0" ", " imm_0 };
    binary { 0b0000000:bit[7] imm_0[4..0] 0b00000001000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_shift(el:opc_slli, el:x_0_alias, el:x_0, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_slli, rd = x_0_alias, rs1 = x_0_alias, imm = uimm5(value))
instruction i_rtype_shift__opc_slli__x_0_alias__x_0_alias__uimm5__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "slli" "zero" ", " "zero" ", " imm_0 };
    binary { 0b0000000:bit[7] imm_0[4..0] 0b00000001000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_shift(el:opc_slli, el:x_0_alias, el:x_0_alias, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_slli, rd = x_0_alias, rs1 = xpr_general, imm = uimm5(value))
instruction i_rtype_shift__opc_slli__x_0_alias__xpr_general__uimm5__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "slli" "zero" ", " reg_0 ", " imm_1 };
    binary { 0b0000000:bit[7] imm_1[4..0] reg_0[4..0] 0b001000000010011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_shift(el:opc_slli, el:x_0_alias, el:xpr_general, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_slli, rd = xpr_general, rs1 = x_0, imm = uimm5(value))
instruction i_rtype_shift__opc_slli__xpr_general__x_0__uimm5__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "slli" reg_0 ", " "x0" ", " imm_1 };
    binary { 0b0000000:bit[7] imm_1[4..0] 0b00000001:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_shift(el:opc_slli, el:xpr_general, el:x_0, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_slli, rd = xpr_general, rs1 = x_0_alias, imm = uimm5(value))
instruction i_rtype_shift__opc_slli__xpr_general__x_0_alias__uimm5__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "slli" reg_0 ", " "zero" ", " imm_1 };
    binary { 0b0000000:bit[7] imm_1[4..0] 0b00000001:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_shift(el:opc_slli, el:xpr_general, el:x_0_alias, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_slli, rd = xpr_general, rs1 = xpr_general, imm = uimm5(value))
instruction i_rtype_shift__opc_slli__xpr_general__xpr_general__uimm5__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "slli" reg_0 ", " reg_1 ", " imm_2 };
    binary { 0b0000000:bit[7] imm_2[4..0] reg_1[4..0] 0b001:bit[3] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_2,0,5,0,0);
        %4 = i32 shl(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_shift(el:opc_slli, el:xpr_general, el:xpr_general, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srai, rd = x_0, rs1 = x_0, imm = uimm5(value))
instruction i_rtype_shift__opc_srai__x_0__x_0__uimm5__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srai" "x0" ", " "x0" ", " imm_0 };
    binary { 0b0100000:bit[7] imm_0[4..0] 0b00000101000000010011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_rtype_shift(el:opc_srai, el:x_0, el:x_0, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srai, rd = x_0, rs1 = x_0_alias, imm = uimm5(value))
instruction i_rtype_shift__opc_srai__x_0__x_0_alias__uimm5__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srai" "x0" ", " "zero" ", " imm_0 };
    binary { 0b0100000:bit[7] imm_0[4..0] 0b00000101000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_shift(el:opc_srai, el:x_0, el:x_0_alias, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srai, rd = x_0, rs1 = xpr_general, imm = uimm5(value))
instruction i_rtype_shift__opc_srai__x_0__xpr_general__uimm5__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srai" "x0" ", " reg_0 ", " imm_1 };
    binary { 0b0100000:bit[7] imm_1[4..0] reg_0[4..0] 0b101000000010011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_shift(el:opc_srai, el:x_0, el:xpr_general, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srai, rd = x_0_alias, rs1 = x_0, imm = uimm5(value))
instruction i_rtype_shift__opc_srai__x_0_alias__x_0__uimm5__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srai" "zero" ", " "x0" ", " imm_0 };
    binary { 0b0100000:bit[7] imm_0[4..0] 0b00000101000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_shift(el:opc_srai, el:x_0_alias, el:x_0, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srai, rd = x_0_alias, rs1 = x_0_alias, imm = uimm5(value))
instruction i_rtype_shift__opc_srai__x_0_alias__x_0_alias__uimm5__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srai" "zero" ", " "zero" ", " imm_0 };
    binary { 0b0100000:bit[7] imm_0[4..0] 0b00000101000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_shift(el:opc_srai, el:x_0_alias, el:x_0_alias, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srai, rd = x_0_alias, rs1 = xpr_general, imm = uimm5(value))
instruction i_rtype_shift__opc_srai__x_0_alias__xpr_general__uimm5__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srai" "zero" ", " reg_0 ", " imm_1 };
    binary { 0b0100000:bit[7] imm_1[4..0] reg_0[4..0] 0b101000000010011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_shift(el:opc_srai, el:x_0_alias, el:xpr_general, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srai, rd = xpr_general, rs1 = x_0, imm = uimm5(value))
instruction i_rtype_shift__opc_srai__xpr_general__x_0__uimm5__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srai" reg_0 ", " "x0" ", " imm_1 };
    binary { 0b0100000:bit[7] imm_1[4..0] 0b00000101:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_shift(el:opc_srai, el:xpr_general, el:x_0, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srai, rd = xpr_general, rs1 = x_0_alias, imm = uimm5(value))
instruction i_rtype_shift__opc_srai__xpr_general__x_0_alias__uimm5__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srai" reg_0 ", " "zero" ", " imm_1 };
    binary { 0b0100000:bit[7] imm_1[4..0] 0b00000101:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_shift(el:opc_srai, el:xpr_general, el:x_0_alias, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srai, rd = xpr_general, rs1 = xpr_general, imm = uimm5(value))
instruction i_rtype_shift__opc_srai__xpr_general__xpr_general__uimm5__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srai" reg_0 ", " reg_1 ", " imm_2 };
    binary { 0b0100000:bit[7] imm_2[4..0] reg_1[4..0] 0b101:bit[3] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_2,0,5,0,0);
        %4 = i32 sra(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_shift(el:opc_srai, el:xpr_general, el:xpr_general, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srli, rd = x_0, rs1 = x_0, imm = uimm5(value))
instruction i_rtype_shift__opc_srli__x_0__x_0__uimm5__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srli" "x0" ", " "x0" ", " imm_0 };
    binary { 0b0000000:bit[7] imm_0[4..0] 0b00000101000000010011:bit[20] };
    semantics
    {
    };
    element_tree = "el:i_rtype_shift(el:opc_srli, el:x_0, el:x_0, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srli, rd = x_0, rs1 = x_0_alias, imm = uimm5(value))
instruction i_rtype_shift__opc_srli__x_0__x_0_alias__uimm5__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srli" "x0" ", " "zero" ", " imm_0 };
    binary { 0b0000000:bit[7] imm_0[4..0] 0b00000101000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_shift(el:opc_srli, el:x_0, el:x_0_alias, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srli, rd = x_0, rs1 = xpr_general, imm = uimm5(value))
instruction i_rtype_shift__opc_srli__x_0__xpr_general__uimm5__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srli" "x0" ", " reg_0 ", " imm_1 };
    binary { 0b0000000:bit[7] imm_1[4..0] reg_0[4..0] 0b101000000010011:bit[15] };
    semantics
    {
    };
    element_tree = "el:i_rtype_shift(el:opc_srli, el:x_0, el:xpr_general, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srli, rd = x_0_alias, rs1 = x_0, imm = uimm5(value))
instruction i_rtype_shift__opc_srli__x_0_alias__x_0__uimm5__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srli" "zero" ", " "x0" ", " imm_0 };
    binary { 0b0000000:bit[7] imm_0[4..0] 0b00000101000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_shift(el:opc_srli, el:x_0_alias, el:x_0, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srli, rd = x_0_alias, rs1 = x_0_alias, imm = uimm5(value))
instruction i_rtype_shift__opc_srli__x_0_alias__x_0_alias__uimm5__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srli" "zero" ", " "zero" ", " imm_0 };
    binary { 0b0000000:bit[7] imm_0[4..0] 0b00000101000000010011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_shift(el:opc_srli, el:x_0_alias, el:x_0_alias, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srli, rd = x_0_alias, rs1 = xpr_general, imm = uimm5(value))
instruction i_rtype_shift__opc_srli__x_0_alias__xpr_general__uimm5__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srli" "zero" ", " reg_0 ", " imm_1 };
    binary { 0b0000000:bit[7] imm_1[4..0] reg_0[4..0] 0b101000000010011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_shift(el:opc_srli, el:x_0_alias, el:xpr_general, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srli, rd = xpr_general, rs1 = x_0, imm = uimm5(value))
instruction i_rtype_shift__opc_srli__xpr_general__x_0__uimm5__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srli" reg_0 ", " "x0" ", " imm_1 };
    binary { 0b0000000:bit[7] imm_1[4..0] 0b00000101:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_shift(el:opc_srli, el:xpr_general, el:x_0, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srli, rd = xpr_general, rs1 = x_0_alias, imm = uimm5(value))
instruction i_rtype_shift__opc_srli__xpr_general__x_0_alias__uimm5__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srli" reg_0 ", " "zero" ", " imm_1 };
    binary { 0b0000000:bit[7] imm_1[4..0] 0b00000101:bit[8] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_rtype_shift(el:opc_srli, el:xpr_general, el:x_0_alias, el:uimm5)";
    slots = {{0}};
};

/// i_rtype_shift(opc = opc_srli, rd = xpr_general, rs1 = xpr_general, imm = uimm5(value))
instruction i_rtype_shift__opc_srli__xpr_general__xpr_general__uimm5__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI5valueIH1_13default_start7_5uimm53imm1_5uimm5") };
    assembly { "srli" reg_0 ", " reg_1 ", " imm_2 };
    binary { 0b0000000:bit[7] imm_2[4..0] reg_1[4..0] 0b101:bit[3] reg_0[4..0] 0b0010011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_1);
        %6 = i32 immop(imm_2,0,5,0,0);
        %4 = i32 srl(i32 %5, i32 %6);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_rtype_shift(el:opc_srli, el:xpr_general, el:xpr_general, el:uimm5)";
    slots = {{0}};
};

/// i_seqz_alias(rd = x_0, rs1 = x_0)
instruction i_seqz_alias__x_0__x_0__
{
    operands {};
    assembly { "seqz" "x0"~"," "x0" };
    binary { 0b00000000000100000011000000010011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_seqz_alias(el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_seqz_alias(rd = x_0, rs1 = x_0_alias)
instruction i_seqz_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "seqz" "x0"~"," "zero" };
    binary { 0b00000000000100000011000000010011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_seqz_alias(el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_seqz_alias(rd = x_0, rs1 = xpr_general)
instruction i_seqz_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "seqz" "x0"~"," reg_0 };
    binary { 0b000000000001:bit[12] reg_0[4..0] 0b011000000010011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_seqz_alias(el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_seqz_alias(rd = x_0_alias, rs1 = x_0)
instruction i_seqz_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "seqz" "zero"~"," "x0" };
    binary { 0b00000000000100000011000000010011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_seqz_alias(el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_seqz_alias(rd = x_0_alias, rs1 = x_0_alias)
instruction i_seqz_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "seqz" "zero"~"," "zero" };
    binary { 0b00000000000100000011000000010011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_seqz_alias(el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_seqz_alias(rd = x_0_alias, rs1 = xpr_general)
instruction i_seqz_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "seqz" "zero"~"," reg_0 };
    binary { 0b000000000001:bit[12] reg_0[4..0] 0b011000000010011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_seqz_alias(el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_seqz_alias(rd = xpr_general, rs1 = x_0)
instruction i_seqz_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "seqz" reg_0~"," "x0" };
    binary { 0b00000000000100000011:bit[20] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_seqz_alias(el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_seqz_alias(rd = xpr_general, rs1 = x_0_alias)
instruction i_seqz_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "seqz" reg_0~"," "zero" };
    binary { 0b00000000000100000011:bit[20] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_seqz_alias(el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_seqz_alias(rd = xpr_general, rs1 = xpr_general)
instruction i_seqz_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "seqz" reg_0~"," reg_1 };
    binary { 0b000000000001:bit[12] reg_1[4..0] 0b011:bit[3] reg_0[4..0] 0b0010011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_seqz_alias(el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0, rs2 = x_0, rs1 = x_0)
instruction i_sgt_alias__x_0__x_0__x_0__
{
    operands {};
    assembly { "sgt" "x0"~"," "x0"~"," "x0" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0, rs2 = x_0, rs1 = x_0_alias)
instruction i_sgt_alias__x_0__x_0__x_0_alias__
{
    operands {};
    assembly { "sgt" "x0"~"," "x0"~"," "zero" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0, rs2 = x_0, rs1 = xpr_general)
instruction i_sgt_alias__x_0__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgt" "x0"~"," "x0"~"," reg_0 };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b010000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0, rs2 = x_0_alias, rs1 = x_0)
instruction i_sgt_alias__x_0__x_0_alias__x_0__
{
    operands {};
    assembly { "sgt" "x0"~"," "zero"~"," "x0" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0, rs2 = x_0_alias, rs1 = x_0_alias)
instruction i_sgt_alias__x_0__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "sgt" "x0"~"," "zero"~"," "zero" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0, rs2 = x_0_alias, rs1 = xpr_general)
instruction i_sgt_alias__x_0__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgt" "x0"~"," "zero"~"," reg_0 };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b010000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0, rs2 = xpr_general, rs1 = x_0)
instruction i_sgt_alias__x_0__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgt" "x0"~"," reg_0~"," "x0" };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000010000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0, rs2 = xpr_general, rs1 = x_0_alias)
instruction i_sgt_alias__x_0__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgt" "x0"~"," reg_0~"," "zero" };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000010000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0, rs2 = xpr_general, rs1 = xpr_general)
instruction i_sgt_alias__x_0__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sgt" "x0"~"," reg_0~"," reg_1 };
    binary { 0b0000000:bit[7] reg_0[4..0] reg_1[4..0] 0b010000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0_alias, rs2 = x_0, rs1 = x_0)
instruction i_sgt_alias__x_0_alias__x_0__x_0__
{
    operands {};
    assembly { "sgt" "zero"~"," "x0"~"," "x0" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0_alias, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0_alias, rs2 = x_0, rs1 = x_0_alias)
instruction i_sgt_alias__x_0_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "sgt" "zero"~"," "x0"~"," "zero" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0_alias, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0_alias, rs2 = x_0, rs1 = xpr_general)
instruction i_sgt_alias__x_0_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgt" "zero"~"," "x0"~"," reg_0 };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b010000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0_alias, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0_alias, rs2 = x_0_alias, rs1 = x_0)
instruction i_sgt_alias__x_0_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "sgt" "zero"~"," "zero"~"," "x0" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0_alias, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0_alias, rs2 = x_0_alias, rs1 = x_0_alias)
instruction i_sgt_alias__x_0_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "sgt" "zero"~"," "zero"~"," "zero" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0_alias, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0_alias, rs2 = x_0_alias, rs1 = xpr_general)
instruction i_sgt_alias__x_0_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgt" "zero"~"," "zero"~"," reg_0 };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b010000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0_alias, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0_alias, rs2 = xpr_general, rs1 = x_0)
instruction i_sgt_alias__x_0_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgt" "zero"~"," reg_0~"," "x0" };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000010000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0_alias, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0_alias, rs2 = xpr_general, rs1 = x_0_alias)
instruction i_sgt_alias__x_0_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgt" "zero"~"," reg_0~"," "zero" };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000010000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0_alias, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_sgt_alias(rd = x_0_alias, rs2 = xpr_general, rs1 = xpr_general)
instruction i_sgt_alias__x_0_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sgt" "zero"~"," reg_0~"," reg_1 };
    binary { 0b0000000:bit[7] reg_0[4..0] reg_1[4..0] 0b010000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:x_0_alias, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_sgt_alias(rd = xpr_general, rs2 = x_0, rs1 = x_0)
instruction i_sgt_alias__xpr_general__x_0__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgt" reg_0~"," "x0"~"," "x0" };
    binary { 0b00000000000000000010:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:xpr_general, el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_sgt_alias(rd = xpr_general, rs2 = x_0, rs1 = x_0_alias)
instruction i_sgt_alias__xpr_general__x_0__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgt" reg_0~"," "x0"~"," "zero" };
    binary { 0b00000000000000000010:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:xpr_general, el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_sgt_alias(rd = xpr_general, rs2 = x_0, rs1 = xpr_general)
instruction i_sgt_alias__xpr_general__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sgt" reg_0~"," "x0"~"," reg_1 };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b010:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:xpr_general, el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_sgt_alias(rd = xpr_general, rs2 = x_0_alias, rs1 = x_0)
instruction i_sgt_alias__xpr_general__x_0_alias__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgt" reg_0~"," "zero"~"," "x0" };
    binary { 0b00000000000000000010:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:xpr_general, el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_sgt_alias(rd = xpr_general, rs2 = x_0_alias, rs1 = x_0_alias)
instruction i_sgt_alias__xpr_general__x_0_alias__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgt" reg_0~"," "zero"~"," "zero" };
    binary { 0b00000000000000000010:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:xpr_general, el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_sgt_alias(rd = xpr_general, rs2 = x_0_alias, rs1 = xpr_general)
instruction i_sgt_alias__xpr_general__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sgt" reg_0~"," "zero"~"," reg_1 };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b010:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:xpr_general, el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_sgt_alias(rd = xpr_general, rs2 = xpr_general, rs1 = x_0)
instruction i_sgt_alias__xpr_general__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sgt" reg_0~"," reg_1~"," "x0" };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000010:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:xpr_general, el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_sgt_alias(rd = xpr_general, rs2 = xpr_general, rs1 = x_0_alias)
instruction i_sgt_alias__xpr_general__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sgt" reg_0~"," reg_1~"," "zero" };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000010:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:xpr_general, el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_sgt_alias(rd = xpr_general, rs2 = xpr_general, rs1 = xpr_general)
instruction i_sgt_alias__xpr_general__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), reg_2 = regop(xpr_general) };
    assembly { "sgt" reg_0~"," reg_1~"," reg_2 };
    binary { 0b0000000:bit[7] reg_1[4..0] reg_2[4..0] 0b010:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgt_alias(el:xpr_general, el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_sgtz_alias(rd = x_0, rs2 = x_0)
instruction i_sgtz_alias__x_0__x_0__
{
    operands {};
    assembly { "sgtz" "x0"~"," "x0" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgtz_alias(el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_sgtz_alias(rd = x_0, rs2 = x_0_alias)
instruction i_sgtz_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "sgtz" "x0"~"," "zero" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgtz_alias(el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_sgtz_alias(rd = x_0, rs2 = xpr_general)
instruction i_sgtz_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgtz" "x0"~"," reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000010000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgtz_alias(el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_sgtz_alias(rd = x_0_alias, rs2 = x_0)
instruction i_sgtz_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "sgtz" "zero"~"," "x0" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgtz_alias(el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_sgtz_alias(rd = x_0_alias, rs2 = x_0_alias)
instruction i_sgtz_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "sgtz" "zero"~"," "zero" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgtz_alias(el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_sgtz_alias(rd = x_0_alias, rs2 = xpr_general)
instruction i_sgtz_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgtz" "zero"~"," reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000010000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgtz_alias(el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_sgtz_alias(rd = xpr_general, rs2 = x_0)
instruction i_sgtz_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgtz" reg_0~"," "x0" };
    binary { 0b00000000000000000010:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgtz_alias(el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_sgtz_alias(rd = xpr_general, rs2 = x_0_alias)
instruction i_sgtz_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sgtz" reg_0~"," "zero" };
    binary { 0b00000000000000000010:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgtz_alias(el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_sgtz_alias(rd = xpr_general, rs2 = xpr_general)
instruction i_sgtz_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sgtz" reg_0~"," reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000010:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sgtz_alias(el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_sltz_alias(rd = x_0, rs1 = x_0)
instruction i_sltz_alias__x_0__x_0__
{
    operands {};
    assembly { "sltz" "x0"~"," "x0" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sltz_alias(el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_sltz_alias(rd = x_0, rs1 = x_0_alias)
instruction i_sltz_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "sltz" "x0"~"," "zero" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sltz_alias(el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_sltz_alias(rd = x_0, rs1 = xpr_general)
instruction i_sltz_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltz" "x0"~"," reg_0 };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b010000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sltz_alias(el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_sltz_alias(rd = x_0_alias, rs1 = x_0)
instruction i_sltz_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "sltz" "zero"~"," "x0" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sltz_alias(el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_sltz_alias(rd = x_0_alias, rs1 = x_0_alias)
instruction i_sltz_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "sltz" "zero"~"," "zero" };
    binary { 0b00000000000000000010000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sltz_alias(el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_sltz_alias(rd = x_0_alias, rs1 = xpr_general)
instruction i_sltz_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltz" "zero"~"," reg_0 };
    binary { 0b000000000000:bit[12] reg_0[4..0] 0b010000000110011:bit[15] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sltz_alias(el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_sltz_alias(rd = xpr_general, rs1 = x_0)
instruction i_sltz_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltz" reg_0~"," "x0" };
    binary { 0b00000000000000000010:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sltz_alias(el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_sltz_alias(rd = xpr_general, rs1 = x_0_alias)
instruction i_sltz_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "sltz" reg_0~"," "zero" };
    binary { 0b00000000000000000010:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sltz_alias(el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_sltz_alias(rd = xpr_general, rs1 = xpr_general)
instruction i_sltz_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "sltz" reg_0~"," reg_1 };
    binary { 0b000000000000:bit[12] reg_1[4..0] 0b010:bit[3] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_sltz_alias(el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_snez_alias(rd = x_0, rs2 = x_0)
instruction i_snez_alias__x_0__x_0__
{
    operands {};
    assembly { "snez" "x0"~"," "x0" };
    binary { 0b00000000000000000011000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_snez_alias(el:x_0, el:x_0)";
    slots = {{0}};
};

/// i_snez_alias(rd = x_0, rs2 = x_0_alias)
instruction i_snez_alias__x_0__x_0_alias__
{
    operands {};
    assembly { "snez" "x0"~"," "zero" };
    binary { 0b00000000000000000011000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_snez_alias(el:x_0, el:x_0_alias)";
    slots = {{0}};
};

/// i_snez_alias(rd = x_0, rs2 = xpr_general)
instruction i_snez_alias__x_0__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "snez" "x0"~"," reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000011000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_snez_alias(el:x_0, el:xpr_general)";
    slots = {{0}};
};

/// i_snez_alias(rd = x_0_alias, rs2 = x_0)
instruction i_snez_alias__x_0_alias__x_0__
{
    operands {};
    assembly { "snez" "zero"~"," "x0" };
    binary { 0b00000000000000000011000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_snez_alias(el:x_0_alias, el:x_0)";
    slots = {{0}};
};

/// i_snez_alias(rd = x_0_alias, rs2 = x_0_alias)
instruction i_snez_alias__x_0_alias__x_0_alias__
{
    operands {};
    assembly { "snez" "zero"~"," "zero" };
    binary { 0b00000000000000000011000000110011:bit[32] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_snez_alias(el:x_0_alias, el:x_0_alias)";
    slots = {{0}};
};

/// i_snez_alias(rd = x_0_alias, rs2 = xpr_general)
instruction i_snez_alias__x_0_alias__xpr_general__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "snez" "zero"~"," reg_0 };
    binary { 0b0000000:bit[7] reg_0[4..0] 0b00000011000000110011:bit[20] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_snez_alias(el:x_0_alias, el:xpr_general)";
    slots = {{0}};
};

/// i_snez_alias(rd = xpr_general, rs2 = x_0)
instruction i_snez_alias__xpr_general__x_0__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "snez" reg_0~"," "x0" };
    binary { 0b00000000000000000011:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_snez_alias(el:xpr_general, el:x_0)";
    slots = {{0}};
};

/// i_snez_alias(rd = xpr_general, rs2 = x_0_alias)
instruction i_snez_alias__xpr_general__x_0_alias__
{
    operands { reg_0 = regop(xpr_general) };
    assembly { "snez" reg_0~"," "zero" };
    binary { 0b00000000000000000011:bit[20] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_snez_alias(el:xpr_general, el:x_0_alias)";
    slots = {{0}};
};

/// i_snez_alias(rd = xpr_general, rs2 = xpr_general)
instruction i_snez_alias__xpr_general__xpr_general__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general) };
    assembly { "snez" reg_0~"," reg_1 };
    binary { 0b0000000:bit[7] reg_1[4..0] 0b00000011:bit[8] reg_0[4..0] 0b0110011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_snez_alias(el:xpr_general, el:xpr_general)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sb, rs2 = x_0, simm = simm12(value), rs1 = x_0)
instruction i_stype_store__opc_sb__x_0__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sb" "x0" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..5] 0b0000000000000:bit[13] imm_0[4..0] 0b0100011:bit[7] };
    semantics
    {
        %4 = i8 0;
        %5 = i32 immop(imm_0,1,12,0,0);
        store(i8 %4, i32 %5, 0);
    };
    element_tree = "el:i_stype_store(el:opc_sb, el:x_0, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sb, rs2 = x_0, simm = simm12(value), rs1 = x_0_alias)
instruction i_stype_store__opc_sb__x_0__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sb" "x0" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..5] 0b0000000000000:bit[13] imm_0[4..0] 0b0100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_stype_store(el:opc_sb, el:x_0, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sb, rs2 = x_0, simm = simm12(value), rs1 = xpr_general)
instruction i_stype_store__opc_sb__x_0__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "sb" "x0" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..5] 0b00000:bit[5] reg_1[4..0] 0b000:bit[3] imm_0[4..0] 0b0100011:bit[7] };
    semantics
    {
        %4 = i8 0;
        %6 = i32 regop(reg_1);
        %7 = i32 immop(imm_0,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        store(i8 %4, i32 %5, 0);
    };
    element_tree = "el:i_stype_store(el:opc_sb, el:x_0, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sb, rs2 = x_0_alias, simm = simm12(value), rs1 = x_0)
instruction i_stype_store__opc_sb__x_0_alias__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sb" "zero" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..5] 0b0000000000000:bit[13] imm_0[4..0] 0b0100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_stype_store(el:opc_sb, el:x_0_alias, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sb, rs2 = x_0_alias, simm = simm12(value), rs1 = x_0_alias)
instruction i_stype_store__opc_sb__x_0_alias__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sb" "zero" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..5] 0b0000000000000:bit[13] imm_0[4..0] 0b0100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_stype_store(el:opc_sb, el:x_0_alias, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sb, rs2 = x_0_alias, simm = simm12(value), rs1 = xpr_general)
instruction i_stype_store__opc_sb__x_0_alias__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "sb" "zero" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..5] 0b00000:bit[5] reg_1[4..0] 0b000:bit[3] imm_0[4..0] 0b0100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_stype_store(el:opc_sb, el:x_0_alias, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sb, rs2 = xpr_general, simm = simm12(value), rs1 = x_0)
instruction i_stype_store__opc_sb__xpr_general__simm12__x_0__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sb" reg_0 ", " imm_1 "(" "x0" ")" };
    binary { imm_1[11..5] reg_0[4..0] 0b00000000:bit[8] imm_1[4..0] 0b0100011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_0);
        %4 = i8 truncate(i32 %5);
        %6 = i32 immop(imm_1,1,12,0,0);
        store(i8 %4, i32 %6, 0);
    };
    element_tree = "el:i_stype_store(el:opc_sb, el:xpr_general, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sb, rs2 = xpr_general, simm = simm12(value), rs1 = x_0_alias)
instruction i_stype_store__opc_sb__xpr_general__simm12__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sb" reg_0 ", " imm_1 "(" "zero" ")" };
    binary { imm_1[11..5] reg_0[4..0] 0b00000000:bit[8] imm_1[4..0] 0b0100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_stype_store(el:opc_sb, el:xpr_general, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sb, rs2 = xpr_general, simm = simm12(value), rs1 = xpr_general)
instruction i_stype_store__opc_sb__xpr_general__simm12__xpr_general__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_2 = regop(xpr_general) };
    assembly { "sb" reg_0 ", " imm_1 "(" reg_2 ")" };
    binary { imm_1[11..5] reg_0[4..0] reg_2[4..0] 0b000:bit[3] imm_1[4..0] 0b0100011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_0);
        %4 = i8 truncate(i32 %5);
        %7 = i32 regop(reg_2);
        %8 = i32 immop(imm_1,1,12,0,0);
        %6 = i32 add(i32 %7, i32 %8);
        store(i8 %4, i32 %6, 0);
    };
    element_tree = "el:i_stype_store(el:opc_sb, el:xpr_general, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sh, rs2 = x_0, simm = simm12(value), rs1 = x_0)
instruction i_stype_store__opc_sh__x_0__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sh" "x0" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..5] 0b0000000000001:bit[13] imm_0[4..0] 0b0100011:bit[7] };
    semantics
    {
        %4 = i16 0;
        %5 = i32 immop(imm_0,1,12,0,0);
        store(i16 %4, i32 %5, 0);
    };
    element_tree = "el:i_stype_store(el:opc_sh, el:x_0, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sh, rs2 = x_0, simm = simm12(value), rs1 = x_0_alias)
instruction i_stype_store__opc_sh__x_0__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sh" "x0" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..5] 0b0000000000001:bit[13] imm_0[4..0] 0b0100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_stype_store(el:opc_sh, el:x_0, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sh, rs2 = x_0, simm = simm12(value), rs1 = xpr_general)
instruction i_stype_store__opc_sh__x_0__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "sh" "x0" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..5] 0b00000:bit[5] reg_1[4..0] 0b001:bit[3] imm_0[4..0] 0b0100011:bit[7] };
    semantics
    {
        %4 = i16 0;
        %6 = i32 regop(reg_1);
        %7 = i32 immop(imm_0,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        store(i16 %4, i32 %5, 0);
    };
    element_tree = "el:i_stype_store(el:opc_sh, el:x_0, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sh, rs2 = x_0_alias, simm = simm12(value), rs1 = x_0)
instruction i_stype_store__opc_sh__x_0_alias__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sh" "zero" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..5] 0b0000000000001:bit[13] imm_0[4..0] 0b0100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_stype_store(el:opc_sh, el:x_0_alias, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sh, rs2 = x_0_alias, simm = simm12(value), rs1 = x_0_alias)
instruction i_stype_store__opc_sh__x_0_alias__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sh" "zero" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..5] 0b0000000000001:bit[13] imm_0[4..0] 0b0100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_stype_store(el:opc_sh, el:x_0_alias, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sh, rs2 = x_0_alias, simm = simm12(value), rs1 = xpr_general)
instruction i_stype_store__opc_sh__x_0_alias__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "sh" "zero" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..5] 0b00000:bit[5] reg_1[4..0] 0b001:bit[3] imm_0[4..0] 0b0100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_stype_store(el:opc_sh, el:x_0_alias, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sh, rs2 = xpr_general, simm = simm12(value), rs1 = x_0)
instruction i_stype_store__opc_sh__xpr_general__simm12__x_0__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sh" reg_0 ", " imm_1 "(" "x0" ")" };
    binary { imm_1[11..5] reg_0[4..0] 0b00000001:bit[8] imm_1[4..0] 0b0100011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_0);
        %4 = i16 truncate(i32 %5);
        %6 = i32 immop(imm_1,1,12,0,0);
        store(i16 %4, i32 %6, 0);
    };
    element_tree = "el:i_stype_store(el:opc_sh, el:xpr_general, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sh, rs2 = xpr_general, simm = simm12(value), rs1 = x_0_alias)
instruction i_stype_store__opc_sh__xpr_general__simm12__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sh" reg_0 ", " imm_1 "(" "zero" ")" };
    binary { imm_1[11..5] reg_0[4..0] 0b00000001:bit[8] imm_1[4..0] 0b0100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_stype_store(el:opc_sh, el:xpr_general, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sh, rs2 = xpr_general, simm = simm12(value), rs1 = xpr_general)
instruction i_stype_store__opc_sh__xpr_general__simm12__xpr_general__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_2 = regop(xpr_general) };
    assembly { "sh" reg_0 ", " imm_1 "(" reg_2 ")" };
    binary { imm_1[11..5] reg_0[4..0] reg_2[4..0] 0b001:bit[3] imm_1[4..0] 0b0100011:bit[7] };
    semantics
    {
        %5 = i32 regop(reg_0);
        %4 = i16 truncate(i32 %5);
        %7 = i32 regop(reg_2);
        %8 = i32 immop(imm_1,1,12,0,0);
        %6 = i32 add(i32 %7, i32 %8);
        store(i16 %4, i32 %6, 0);
    };
    element_tree = "el:i_stype_store(el:opc_sh, el:xpr_general, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sw, rs2 = x_0, simm = simm12(value), rs1 = x_0)
instruction i_stype_store__opc_sw__x_0__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sw" "x0" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..5] 0b0000000000010:bit[13] imm_0[4..0] 0b0100011:bit[7] };
    semantics
    {
        %4 = i32 0;
        %5 = i32 immop(imm_0,1,12,0,0);
        store(i32 %4, i32 %5, 0);
    };
    element_tree = "el:i_stype_store(el:opc_sw, el:x_0, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sw, rs2 = x_0, simm = simm12(value), rs1 = x_0_alias)
instruction i_stype_store__opc_sw__x_0__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sw" "x0" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..5] 0b0000000000010:bit[13] imm_0[4..0] 0b0100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_stype_store(el:opc_sw, el:x_0, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sw, rs2 = x_0, simm = simm12(value), rs1 = xpr_general)
instruction i_stype_store__opc_sw__x_0__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "sw" "x0" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..5] 0b00000:bit[5] reg_1[4..0] 0b010:bit[3] imm_0[4..0] 0b0100011:bit[7] };
    semantics
    {
        %4 = i32 0;
        %6 = i32 regop(reg_1);
        %7 = i32 immop(imm_0,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        store(i32 %4, i32 %5, 0);
    };
    element_tree = "el:i_stype_store(el:opc_sw, el:x_0, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sw, rs2 = x_0_alias, simm = simm12(value), rs1 = x_0)
instruction i_stype_store__opc_sw__x_0_alias__simm12__x_0__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sw" "zero" ", " imm_0 "(" "x0" ")" };
    binary { imm_0[11..5] 0b0000000000010:bit[13] imm_0[4..0] 0b0100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_stype_store(el:opc_sw, el:x_0_alias, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sw, rs2 = x_0_alias, simm = simm12(value), rs1 = x_0_alias)
instruction i_stype_store__opc_sw__x_0_alias__simm12__x_0_alias__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sw" "zero" ", " imm_0 "(" "zero" ")" };
    binary { imm_0[11..5] 0b0000000000010:bit[13] imm_0[4..0] 0b0100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_stype_store(el:opc_sw, el:x_0_alias, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sw, rs2 = x_0_alias, simm = simm12(value), rs1 = xpr_general)
instruction i_stype_store__opc_sw__x_0_alias__simm12__xpr_general__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_1 = regop(xpr_general) };
    assembly { "sw" "zero" ", " imm_0 "(" reg_1 ")" };
    binary { imm_0[11..5] 0b00000:bit[5] reg_1[4..0] 0b010:bit[3] imm_0[4..0] 0b0100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_stype_store(el:opc_sw, el:x_0_alias, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sw, rs2 = xpr_general, simm = simm12(value), rs1 = x_0)
instruction i_stype_store__opc_sw__xpr_general__simm12__x_0__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sw" reg_0 ", " imm_1 "(" "x0" ")" };
    binary { imm_1[11..5] reg_0[4..0] 0b00000010:bit[8] imm_1[4..0] 0b0100011:bit[7] };
    semantics
    {
        %4 = i32 regop(reg_0);
        %5 = i32 immop(imm_1,1,12,0,0);
        store(i32 %4, i32 %5, 0);
    };
    element_tree = "el:i_stype_store(el:opc_sw, el:xpr_general, el:simm12, el:x_0)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sw, rs2 = xpr_general, simm = simm12(value), rs1 = x_0_alias)
instruction i_stype_store__opc_sw__xpr_general__simm12__x_0_alias__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12") };
    assembly { "sw" reg_0 ", " imm_1 "(" "zero" ")" };
    binary { imm_1[11..5] reg_0[4..0] 0b00000010:bit[8] imm_1[4..0] 0b0100011:bit[7] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_stype_store(el:opc_sw, el:xpr_general, el:simm12, el:x_0_alias)";
    slots = {{0}};
};

/// i_stype_store(opc = opc_sw, rs2 = xpr_general, simm = simm12(value), rs1 = xpr_general)
instruction i_stype_store__opc_sw__xpr_general__simm12__xpr_general__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6simm124simm1_6simm12"), reg_2 = regop(xpr_general) };
    assembly { "sw" reg_0 ", " imm_1 "(" reg_2 ")" };
    binary { imm_1[11..5] reg_0[4..0] reg_2[4..0] 0b010:bit[3] imm_1[4..0] 0b0100011:bit[7] };
    semantics
    {
        %4 = i32 regop(reg_0);
        %6 = i32 regop(reg_2);
        %7 = i32 immop(imm_1,1,12,0,0);
        %5 = i32 add(i32 %6, i32 %7);
        store(i32 %4, i32 %5, 0);
    };
    element_tree = "el:i_stype_store(el:opc_sw, el:xpr_general, el:simm12, el:xpr_general)";
    slots = {{0}};
};

/// i_utype_ops(opc = opc_auipc, rd = x_0, imm = uimm20(value))
instruction i_utype_ops__opc_auipc__x_0__uimm20__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6uimm203imm1_6uimm20") };
    assembly { "auipc" "x0" ", " imm_0 };
    binary { imm_0[19..0] 0b000000010111:bit[12] };
    semantics
    {
    };
    element_tree = "el:i_utype_ops(el:opc_auipc, el:x_0, el:uimm20)";
    slots = {{0}};
};

/// i_utype_ops(opc = opc_auipc, rd = x_0_alias, imm = uimm20(value))
instruction i_utype_ops__opc_auipc__x_0_alias__uimm20__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6uimm203imm1_6uimm20") };
    assembly { "auipc" "zero" ", " imm_0 };
    binary { imm_0[19..0] 0b000000010111:bit[12] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_utype_ops(el:opc_auipc, el:x_0_alias, el:uimm20)";
    slots = {{0}};
};

/// i_utype_ops(opc = opc_auipc, rd = xpr_general, imm = uimm20(value))
instruction i_utype_ops__opc_auipc__xpr_general__uimm20__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6uimm203imm1_6uimm20") };
    assembly { "auipc" reg_0 ", " imm_1 };
    binary { imm_1[19..0] reg_0[4..0] 0b0010111:bit[7] };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_1,0,32,12,12);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_utype_ops(el:opc_auipc, el:xpr_general, el:uimm20)";
    slots = {{0}};
};

/// i_utype_ops(opc = opc_lui, rd = x_0, imm = uimm20(value))
instruction i_utype_ops__opc_lui__x_0__uimm20__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6uimm203imm1_6uimm20") };
    assembly { "lui" "x0" ", " imm_0 };
    binary { imm_0[19..0] 0b000000110111:bit[12] };
    semantics
    {
    };
    element_tree = "el:i_utype_ops(el:opc_lui, el:x_0, el:uimm20)";
    slots = {{0}};
};

/// i_utype_ops(opc = opc_lui, rd = x_0_alias, imm = uimm20(value))
instruction i_utype_ops__opc_lui__x_0_alias__uimm20__
{
    operands { imm_0 = immop("MI5valueIH1_13default_start8_6uimm203imm1_6uimm20") };
    assembly { "lui" "zero" ", " imm_0 };
    binary { imm_0[19..0] 0b000000110111:bit[12] };
    semantics {};
    alias = ASSEMBLER;
    element_tree = "el:i_utype_ops(el:opc_lui, el:x_0_alias, el:uimm20)";
    slots = {{0}};
};

/// i_utype_ops(opc = opc_lui, rd = xpr_general, imm = uimm20(value))
instruction i_utype_ops__opc_lui__xpr_general__uimm20__
{
    operands { reg_0 = regop(xpr_general), imm_1 = immop("MI5valueIH1_13default_start8_6uimm203imm1_6uimm20") };
    assembly { "lui" reg_0 ", " imm_1 };
    binary { imm_1[19..0] reg_0[4..0] 0b0110111:bit[7] };
    semantics
    {
        %4 = i32 immop(imm_1,0,32,12,12);
        regop(reg_0) = i32 %4;
    };
    element_tree = "el:i_utype_ops(el:opc_lui, el:xpr_general, el:uimm20)";
    slots = {{0}};
};

emulation e_movi32__
{
    operands { imm_0 = immop(), reg_1 = regop(xpr_general) };
    semantics
    {
        %4 = i32 immop(imm_0,0,32,0,0);
        regop(reg_1) = i32 %4;
    };
    if (codasip_is_postRA_phase())
    {
        instructions
        {
            i_utype_ops__opc_lui__xpr_general__uimm20__ reg_0 = reg_1, imm_1 = imm_0 >> 12 & 0xfffff;
            i_utype_ops__opc_lui__xpr_general__uimm20__ reg_0 = reg(rf_xpr, 30), imm_1 = imm_0 & 0xfff;
            i_rtype_shift__opc_srli__xpr_general__xpr_general__uimm5__ reg_0 = reg(rf_xpr, 30), reg_1 = reg(rf_xpr, 30), imm_2 = 12;
            i_rtype_alu__opc_or__xpr_general__xpr_general__xpr_general__ reg_0 = reg_1, reg_1 = reg_1, reg_2 = reg(rf_xpr, 30);
        };
    }
    if (!codasip_is_postRA_phase())
    {
        instructions
        {
            i_utype_ops__opc_lui__xpr_general__uimm20__ reg_0 = %0, imm_1 = imm_0 >> 12 & 0xfffff;
            i_utype_ops__opc_lui__xpr_general__uimm20__ reg_0 = reg(rf_xpr, 30), imm_1 = imm_0 & 0xfff;
            i_rtype_shift__opc_srli__xpr_general__xpr_general__uimm5__ reg_0 = reg(rf_xpr, 30), reg_1 = reg(rf_xpr, 30), imm_2 = 12;
            i_rtype_alu__opc_or__xpr_general__xpr_general__xpr_general__ reg_0 = reg_1, reg_1 = %0, reg_2 = reg(rf_xpr, 30);
        };
    }
};

/// swapped compare   %cmp13.i = icmp sge i32 %0, %1, !dbg !21 to   %cmp13.i = icmp sle i32 %1, %0, !dbg !21
emulation i_btype_branches__opc_bge__xpr_general__xpr_general__relative_addr12__swappedCmpClone0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_1);
        %11 = i32 regop(reg_0);
        %9 = i1 setle(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    instructions
    {
        i_btype_branches__opc_bge__xpr_general__xpr_general__relative_addr12__ reg_0 = reg_0, reg_1 = reg_1, imm_2 = imm_2;
    };
};

/// swapped compare   %cmp21.i = icmp uge i32 %0, %1, !dbg !21 to   %cmp21.i = icmp ule i32 %1, %0, !dbg !21
emulation i_btype_branches__opc_bgeu__xpr_general__xpr_general__relative_addr12__swappedCmpClone0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_1);
        %11 = i32 regop(reg_0);
        %9 = i1 setule(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    instructions
    {
        i_btype_branches__opc_bgeu__xpr_general__xpr_general__relative_addr12__ reg_0 = reg_0, reg_1 = reg_1, imm_2 = imm_2;
    };
};

/// swapped compare   %cmp9.i = icmp slt i32 %0, %1, !dbg !21 to   %cmp9.i = icmp sgt i32 %1, %0, !dbg !21
emulation i_btype_branches__opc_blt__xpr_general__xpr_general__relative_addr12__swappedCmpClone0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_1);
        %11 = i32 regop(reg_0);
        %9 = i1 setgt(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    instructions
    {
        i_btype_branches__opc_blt__xpr_general__xpr_general__relative_addr12__ reg_0 = reg_0, reg_1 = reg_1, imm_2 = imm_2;
    };
};

/// swapped compare   %cmp17.i = icmp ult i32 %0, %1, !dbg !21 to   %cmp17.i = icmp ugt i32 %1, %0, !dbg !21
emulation i_btype_branches__opc_bltu__xpr_general__xpr_general__relative_addr12__swappedCmpClone0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), imm_2 = immop("MI6addr12IH1_13default_start18_15relative_addr123imm1_15relative_addr12") };
    semantics
    {
        %6 = i32 get_pc();
        %7 = i32 immop(imm_2,1,13,1,0);
        %5 = i32 add(i32 %6, i32 %7);
        %8 = i32 -4;
        %4 = i32 add(i32 %5, i32 %8);
        %10 = i32 regop(reg_1);
        %11 = i32 regop(reg_0);
        %9 = i1 setugt(i32 %10, i32 %11);
        jump(i32 %4, i1 %9);
    };
    instructions
    {
        i_btype_branches__opc_bltu__xpr_general__xpr_general__relative_addr12__ reg_0 = reg_0, reg_1 = reg_1, imm_2 = imm_2;
    };
};

/// immediate specialization of i_itype_alu__opc_slti__xpr_general__x_0__simm12__
emulation i_itype_alu__opc_slti__xpr_general__x_0__simm12__immSpecClone__imm_1__1__
{
    operands { reg_0 = regop(xpr_general) };
    semantics
    {
        %4 = i32 1;
        regop(reg_0) = i32 %4;
    };
    instructions
    {
        i_itype_alu__opc_slti__xpr_general__x_0__simm12__ reg_0 = reg_0, imm_1 = 1;
    };
};

/// immediate specialization of i_itype_alu__opc_slti__xpr_general__x_0__simm12__
emulation i_itype_alu__opc_slti__xpr_general__x_0__simm12__immSpecClone__imm_1__0__
{
    operands { reg_0 = regop(xpr_general) };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    instructions
    {
        i_itype_alu__opc_slti__xpr_general__x_0__simm12__ reg_0 = reg_0, imm_1 = 0;
    };
};

/// immediate specialization of i_itype_alu__opc_sltiu__xpr_general__x_0__simm12__
emulation i_itype_alu__opc_sltiu__xpr_general__x_0__simm12__immSpecClone__imm_1__1__
{
    operands { reg_0 = regop(xpr_general) };
    semantics
    {
        %4 = i32 1;
        regop(reg_0) = i32 %4;
    };
    instructions
    {
        i_itype_alu__opc_sltiu__xpr_general__x_0__simm12__ reg_0 = reg_0, imm_1 = 1;
    };
};

/// immediate specialization of i_itype_alu__opc_sltiu__xpr_general__x_0__simm12__
emulation i_itype_alu__opc_sltiu__xpr_general__x_0__simm12__immSpecClone__imm_1__0__
{
    operands { reg_0 = regop(xpr_general) };
    semantics
    {
        %4 = i32 0;
        regop(reg_0) = i32 %4;
    };
    instructions
    {
        i_itype_alu__opc_sltiu__xpr_general__x_0__simm12__ reg_0 = reg_0, imm_1 = 0;
    };
};

/// swapped compare   %cmp.i = icmp slt i32 %0, %1, !dbg !20 to   %cmp.i = icmp sgt i32 %1, %0, !dbg !20
emulation i_rtype_alu__opc_slt__xpr_general__xpr_general__xpr_general__swappedCmpClone0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), reg_2 = regop(xpr_general) };
    semantics
    {
        %6 = i32 regop(reg_2);
        %7 = i32 regop(reg_1);
        %5 = i1 setgt(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;
    };
    instructions
    {
        i_rtype_alu__opc_slt__xpr_general__xpr_general__xpr_general__ reg_0 = reg_0, reg_1 = reg_1, reg_2 = reg_2;
    };
};

/// swapped compare   %cmp8.i = icmp ult i32 %0, %1, !dbg !20 to   %cmp8.i = icmp ugt i32 %1, %0, !dbg !20
emulation i_rtype_alu__opc_sltu__xpr_general__xpr_general__xpr_general__swappedCmpClone0__
{
    operands { reg_0 = regop(xpr_general), reg_1 = regop(xpr_general), reg_2 = regop(xpr_general) };
    semantics
    {
        %6 = i32 regop(reg_2);
        %7 = i32 regop(reg_1);
        %5 = i1 setugt(i32 %6, i32 %7);
        %4 = i32 zero_extend(i1 %5);
        regop(reg_0) = i32 %4;
    };
    instructions
    {
        i_rtype_alu__opc_sltu__xpr_general__xpr_general__xpr_general__ reg_0 = reg_0, reg_1 = reg_1, reg_2 = reg_2;
    };
};
